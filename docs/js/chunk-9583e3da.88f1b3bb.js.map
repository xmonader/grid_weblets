{"version":3,"sources":["webpack:///./src/views/Editor.vue?6f2e","webpack:///./src/views/Editor.vue?a649","webpack:///./src/views/Editor.vue","webpack:///./src/views/Editor.vue?f168","webpack:///./src/views/Editor.vue?ee27","webpack:///./node_modules/marked/lib/marked.cjs","webpack:///./node_modules/core-js/modules/es.array.concat.js"],"names":["render","_vm","this","_h","$createElement","_c","_self","staticClass","_v","_l","el","idx","key","name","on","$event","active","class","_s","domProps","weblets","html","_e","directives","rawName","value","expression","attrs","target","composing","$set","staticRenderFns","symbol","deployment","_md","sanitize","component","global","factory","exports","_defineProperties","props","i","length","descriptor","enumerable","configurable","writable","Object","defineProperty","_createClass","Constructor","protoProps","staticProps","prototype","_unsupportedIterableToArray","o","minLen","_arrayLikeToArray","n","toString","call","slice","constructor","Array","from","test","arr","len","arr2","_createForOfIteratorHelperLoose","allowArrayLike","it","Symbol","iterator","next","bind","isArray","done","TypeError","getDefaults","baseUrl","breaks","extensions","gfm","headerIds","headerPrefix","highlight","langPrefix","mangle","pedantic","renderer","sanitizer","silent","smartLists","smartypants","tokenizer","walkTokens","xhtml","changeDefaults","newDefaults","defaults","escapeTest","escapeReplace","escapeTestNoEncode","escapeReplaceNoEncode","escapeReplacements","getEscapeReplacement","ch","escape","encode","replace","unescapeTest","unescape","_","toLowerCase","charAt","String","fromCharCode","parseInt","substring","caret","edit","regex","opt","source","obj","val","getRegex","RegExp","nonWordAndColonTest","originIndependentUrl","cleanUrl","base","href","prot","decodeURIComponent","e","indexOf","resolveUrl","encodeURI","baseUrls","justDomain","protocol","domain","rtrim","relativeBase","noopTest","exec","merge","arguments","hasOwnProperty","splitCells","tableRow","count","row","match","offset","str","escaped","curr","cells","split","trim","shift","pop","splice","push","c","invert","l","suffLen","currChar","substr","findClosingBracket","b","level","checkSanitizeDeprecation","console","warn","repeatString","pattern","result","outputLink","cap","link","raw","lexer","title","text","state","inLink","token","type","tokens","inlineTokens","indentCodeCompensation","matchIndentToCode","indentToCode","map","node","matchIndentInNode","indentInNode","join","Tokenizer","options","_proto","space","src","rules","block","newline","code","codeBlockStyle","fences","lang","heading","trimmed","depth","inline","hr","blockquote","blockTokens","list","istask","ischecked","indent","blankLine","endsWithBlankLine","line","lines","itemContents","bull","isordered","ordered","start","loose","items","itemRegex","trimLeft","search","nextBulletRegex","Math","min","task","checked","trimRight","top","some","t","pre","def","tag","table","item","header","align","rows","j","k","lheading","paragraph","inRawBlock","trimmedUrl","rtrimSlash","lastParenIndex","linkLen","_escapes","reflink","links","nolink","emStrong","maskedSrc","prevChar","lDelim","nextChar","punctuation","rDelim","rLength","lLength","delimTotal","midDelimTotal","endReg","rDelimAst","rDelimUnd","lastIndex","_text","index","codespan","hasNonSpaceChars","hasSpaceCharsOnBothEnds","br","del","autolink","url","prevCapZero","_backpedal","inlineText","_paragraph","_label","_title","bullet","listItemStart","_tag","_comment","normal","reflinkSearch","out","charCodeAt","random","_punctuation","blockSkip","escapedEmSt","_scheme","_email","_attribute","_href","strong","middle","endAst","endUnd","em","_extended_email","Lexer","create","inlineQueue","lex","lexInline","lastToken","cutSrc","lastParagraphClipped","_this","extTokenizer","startBlock","startIndex","Infinity","tempSrc","tempStart","forEach","getStartIndex","errMsg","error","Error","_this2","keepPrevChar","keys","includes","lastIndexOf","startInline","get","Renderer","_code","infostring","quote","_html","slugger","slug","body","startatt","listitem","checkbox","tablerow","content","tablecell","flags","image","TextRenderer","Slugger","seen","serialize","getNextSafeSlug","originalSlug","isDryRun","occurenceAccumulator","dryrun","Parser","textRenderer","parse","parser","parseInline","l2","l3","cell","itemBody","ret","renderers","unshift","marked","callback","err","pending","setTimeout","_tokens","message","setOptions","use","_len","args","_key","hasExtensions","opts","apply","concat","childTokens","pack","ext","prevRenderer","_len2","_key2","_loop","prop","_len3","_key3","_loop2","prevTokenizer","_len4","_key4","_walkTokens","_step","_loop3","_step2","_iterator2","_step3","_iterator3","_step4","_iterator4","_cell","_iterator","$","fails","isObject","toObject","lengthOfArrayLike","createProperty","arraySpeciesCreate","arrayMethodHasSpeciesSupport","wellKnownSymbol","V8_VERSION","IS_CONCAT_SPREADABLE","MAX_SAFE_INTEGER","MAXIMUM_ALLOWED_INDEX_EXCEEDED","IS_CONCAT_SPREADABLE_SUPPORT","array","SPECIES_SUPPORT","isConcatSpreadable","O","spreadable","undefined","FORCED","proto","forced","arg","E","A"],"mappings":"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","file":"js/chunk-9583e3da.88f1b3bb.js","sourcesContent":["export * from \"-!../../node_modules/mini-css-extract-plugin/dist/loader.js??ref--9-oneOf-1-0!../../node_modules/css-loader/dist/cjs.js??ref--9-oneOf-1-1!../../node_modules/vue-loader/lib/loaders/stylePostLoader.js!../../node_modules/postcss-loader/src/index.js??ref--9-oneOf-1-2!../../node_modules/sass-loader/dist/cjs.js??ref--9-oneOf-1-3!../../node_modules/cache-loader/dist/cjs.js??ref--1-0!../../node_modules/vue-loader/lib/index.js??vue-loader-options!./Editor.vue?vue&type=style&index=0&id=3b9f7f3e&lang=scss&scoped=true&\"","var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('section',{staticClass:\"editor\"},[_c('aside',{staticClass:\"editor__side menu\"},[_c('p',{staticClass:\"menu-label\"},[_vm._v(\"Threefold Weblets\")]),_c('ul',{staticClass:\"menu-list\"},_vm._l((_vm.weblets),function(el,idx){return _c('li',{key:el.name,on:{\"click\":function($event){_vm.active = idx}}},[_c('a',{class:{ 'is-active': idx === _vm.active }},[_vm._v(\" \"+_vm._s(el.name)+\" \")])])}),0)]),(_vm.active >= 0)?_c('div',{staticClass:\"editor__content\"},[_c('div',{domProps:{\"innerHTML\":_vm._s(_vm.weblets[_vm.active].html)}})]):_vm._e(),(_vm.active >= 0)?_c('div',{staticClass:\"editor__area\"},[_c('textarea',{directives:[{name:\"model\",rawName:\"v-model\",value:(_vm.weblets[_vm.active].md),expression:\"weblets[active].md\"}],attrs:{\"spellcheck\":\"false\"},domProps:{\"value\":(_vm.weblets[_vm.active].md)},on:{\"input\":function($event){if($event.target.composing){ return; }_vm.$set(_vm.weblets[_vm.active], \"md\", $event.target.value)}}})]):_vm._e()])}\nvar staticRenderFns = []\n\nexport { render, staticRenderFns }","\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nimport { Component, Vue } from \"vue-property-decorator\";\nimport { parse } from \"marked\";\n\nclass Weblet {\n  private _md: string;\n  public html: string;\n  public constructor(public name: string, symbol: string, deployment?: string) {\n    this._md = `<tf-${symbol}></tf-${symbol}>`;\n    if (deployment) {\n      this._md += `<tf-deployedlist tab=\"${deployment}\"></tf-deployedlist>`;\n    }\n    this.html = parse(this._md, {\n      sanitize: false,\n    });\n  }\n\n  public get md(): string {\n    return this._md;\n  }\n\n  public set md(_md: string) {\n    this._md = _md;\n    this.html = parse(_md, {\n      sanitize: false,\n    });\n  }\n}\n\n@Component({\n  name: \"Editor\",\n})\nexport default class Editor extends Vue {\n  public weblets: Weblet[] = [\n    new Weblet(\"Profile Manager\", \"profiles\"),\n    new Weblet(\"Farming Calculator\", \"farming-calculator\"),\n    new Weblet(\"CapRover\", \"caprover\", \"caprover\"), // \"k8s\" | \"vm\" | \"caprover\"\n    new Weblet(\"Virtual Machine\", \"vm\", \"vm\"),\n    new Weblet(\"Kubernetes\", `kubernetes`, \"k8s\"),\n    new Weblet(\"Deployments\", \"deployedlist\"),\n    // new Weblet(\"Peertube\", \"peertube\"),\n  ];\n  public active = 0;\n}\n","import mod from \"-!../../node_modules/cache-loader/dist/cjs.js??ref--15-0!../../node_modules/thread-loader/dist/cjs.js!../../node_modules/babel-loader/lib/index.js!../../node_modules/ts-loader/index.js??ref--15-3!../../node_modules/cache-loader/dist/cjs.js??ref--1-0!../../node_modules/vue-loader/lib/index.js??vue-loader-options!./Editor.vue?vue&type=script&lang=ts&\"; export default mod; export * from \"-!../../node_modules/cache-loader/dist/cjs.js??ref--15-0!../../node_modules/thread-loader/dist/cjs.js!../../node_modules/babel-loader/lib/index.js!../../node_modules/ts-loader/index.js??ref--15-3!../../node_modules/cache-loader/dist/cjs.js??ref--1-0!../../node_modules/vue-loader/lib/index.js??vue-loader-options!./Editor.vue?vue&type=script&lang=ts&\"","import { render, staticRenderFns } from \"./Editor.vue?vue&type=template&id=3b9f7f3e&scoped=true&\"\nimport script from \"./Editor.vue?vue&type=script&lang=ts&\"\nexport * from \"./Editor.vue?vue&type=script&lang=ts&\"\nimport style0 from \"./Editor.vue?vue&type=style&index=0&id=3b9f7f3e&lang=scss&scoped=true&\"\n\n\n/* normalize component */\nimport normalizer from \"!../../node_modules/vue-loader/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  \"3b9f7f3e\",\n  null\n  \n)\n\nexport default component.exports","/**\n * marked - a markdown parser\n * Copyright (c) 2011-2021, Christopher Jeffrey. (MIT Licensed)\n * https://github.com/markedjs/marked\n */\n\n/**\n * DO NOT EDIT THIS FILE\n * The code in this file is generated from files in ./src/\n */\n\n(function (global, factory) {\n  typeof exports === 'object' && typeof module !== 'undefined' ? factory(exports) :\n  typeof define === 'function' && define.amd ? define(['exports'], factory) :\n  (global = typeof globalThis !== 'undefined' ? globalThis : global || self, factory(global.marked = {}));\n})(this, (function (exports) { 'use strict';\n\n  function _defineProperties(target, props) {\n    for (var i = 0; i < props.length; i++) {\n      var descriptor = props[i];\n      descriptor.enumerable = descriptor.enumerable || false;\n      descriptor.configurable = true;\n      if (\"value\" in descriptor) descriptor.writable = true;\n      Object.defineProperty(target, descriptor.key, descriptor);\n    }\n  }\n\n  function _createClass(Constructor, protoProps, staticProps) {\n    if (protoProps) _defineProperties(Constructor.prototype, protoProps);\n    if (staticProps) _defineProperties(Constructor, staticProps);\n    return Constructor;\n  }\n\n  function _unsupportedIterableToArray(o, minLen) {\n    if (!o) return;\n    if (typeof o === \"string\") return _arrayLikeToArray(o, minLen);\n    var n = Object.prototype.toString.call(o).slice(8, -1);\n    if (n === \"Object\" && o.constructor) n = o.constructor.name;\n    if (n === \"Map\" || n === \"Set\") return Array.from(o);\n    if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen);\n  }\n\n  function _arrayLikeToArray(arr, len) {\n    if (len == null || len > arr.length) len = arr.length;\n\n    for (var i = 0, arr2 = new Array(len); i < len; i++) arr2[i] = arr[i];\n\n    return arr2;\n  }\n\n  function _createForOfIteratorHelperLoose(o, allowArrayLike) {\n    var it = typeof Symbol !== \"undefined\" && o[Symbol.iterator] || o[\"@@iterator\"];\n    if (it) return (it = it.call(o)).next.bind(it);\n\n    if (Array.isArray(o) || (it = _unsupportedIterableToArray(o)) || allowArrayLike && o && typeof o.length === \"number\") {\n      if (it) o = it;\n      var i = 0;\n      return function () {\n        if (i >= o.length) return {\n          done: true\n        };\n        return {\n          done: false,\n          value: o[i++]\n        };\n      };\n    }\n\n    throw new TypeError(\"Invalid attempt to iterate non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n  }\n\n  function getDefaults() {\n    return {\n      baseUrl: null,\n      breaks: false,\n      extensions: null,\n      gfm: true,\n      headerIds: true,\n      headerPrefix: '',\n      highlight: null,\n      langPrefix: 'language-',\n      mangle: true,\n      pedantic: false,\n      renderer: null,\n      sanitize: false,\n      sanitizer: null,\n      silent: false,\n      smartLists: false,\n      smartypants: false,\n      tokenizer: null,\n      walkTokens: null,\n      xhtml: false\n    };\n  }\n  exports.defaults = getDefaults();\n  function changeDefaults(newDefaults) {\n    exports.defaults = newDefaults;\n  }\n\n  /**\n   * Helpers\n   */\n  var escapeTest = /[&<>\"']/;\n  var escapeReplace = /[&<>\"']/g;\n  var escapeTestNoEncode = /[<>\"']|&(?!#?\\w+;)/;\n  var escapeReplaceNoEncode = /[<>\"']|&(?!#?\\w+;)/g;\n  var escapeReplacements = {\n    '&': '&amp;',\n    '<': '&lt;',\n    '>': '&gt;',\n    '\"': '&quot;',\n    \"'\": '&#39;'\n  };\n\n  var getEscapeReplacement = function getEscapeReplacement(ch) {\n    return escapeReplacements[ch];\n  };\n\n  function escape(html, encode) {\n    if (encode) {\n      if (escapeTest.test(html)) {\n        return html.replace(escapeReplace, getEscapeReplacement);\n      }\n    } else {\n      if (escapeTestNoEncode.test(html)) {\n        return html.replace(escapeReplaceNoEncode, getEscapeReplacement);\n      }\n    }\n\n    return html;\n  }\n  var unescapeTest = /&(#(?:\\d+)|(?:#x[0-9A-Fa-f]+)|(?:\\w+));?/ig;\n  function unescape(html) {\n    // explicitly match decimal, hex, and named HTML entities\n    return html.replace(unescapeTest, function (_, n) {\n      n = n.toLowerCase();\n      if (n === 'colon') return ':';\n\n      if (n.charAt(0) === '#') {\n        return n.charAt(1) === 'x' ? String.fromCharCode(parseInt(n.substring(2), 16)) : String.fromCharCode(+n.substring(1));\n      }\n\n      return '';\n    });\n  }\n  var caret = /(^|[^\\[])\\^/g;\n  function edit(regex, opt) {\n    regex = regex.source || regex;\n    opt = opt || '';\n    var obj = {\n      replace: function replace(name, val) {\n        val = val.source || val;\n        val = val.replace(caret, '$1');\n        regex = regex.replace(name, val);\n        return obj;\n      },\n      getRegex: function getRegex() {\n        return new RegExp(regex, opt);\n      }\n    };\n    return obj;\n  }\n  var nonWordAndColonTest = /[^\\w:]/g;\n  var originIndependentUrl = /^$|^[a-z][a-z0-9+.-]*:|^[?#]/i;\n  function cleanUrl(sanitize, base, href) {\n    if (sanitize) {\n      var prot;\n\n      try {\n        prot = decodeURIComponent(unescape(href)).replace(nonWordAndColonTest, '').toLowerCase();\n      } catch (e) {\n        return null;\n      }\n\n      if (prot.indexOf('javascript:') === 0 || prot.indexOf('vbscript:') === 0 || prot.indexOf('data:') === 0) {\n        return null;\n      }\n    }\n\n    if (base && !originIndependentUrl.test(href)) {\n      href = resolveUrl(base, href);\n    }\n\n    try {\n      href = encodeURI(href).replace(/%25/g, '%');\n    } catch (e) {\n      return null;\n    }\n\n    return href;\n  }\n  var baseUrls = {};\n  var justDomain = /^[^:]+:\\/*[^/]*$/;\n  var protocol = /^([^:]+:)[\\s\\S]*$/;\n  var domain = /^([^:]+:\\/*[^/]*)[\\s\\S]*$/;\n  function resolveUrl(base, href) {\n    if (!baseUrls[' ' + base]) {\n      // we can ignore everything in base after the last slash of its path component,\n      // but we might need to add _that_\n      // https://tools.ietf.org/html/rfc3986#section-3\n      if (justDomain.test(base)) {\n        baseUrls[' ' + base] = base + '/';\n      } else {\n        baseUrls[' ' + base] = rtrim(base, '/', true);\n      }\n    }\n\n    base = baseUrls[' ' + base];\n    var relativeBase = base.indexOf(':') === -1;\n\n    if (href.substring(0, 2) === '//') {\n      if (relativeBase) {\n        return href;\n      }\n\n      return base.replace(protocol, '$1') + href;\n    } else if (href.charAt(0) === '/') {\n      if (relativeBase) {\n        return href;\n      }\n\n      return base.replace(domain, '$1') + href;\n    } else {\n      return base + href;\n    }\n  }\n  var noopTest = {\n    exec: function noopTest() {}\n  };\n  function merge(obj) {\n    var i = 1,\n        target,\n        key;\n\n    for (; i < arguments.length; i++) {\n      target = arguments[i];\n\n      for (key in target) {\n        if (Object.prototype.hasOwnProperty.call(target, key)) {\n          obj[key] = target[key];\n        }\n      }\n    }\n\n    return obj;\n  }\n  function splitCells(tableRow, count) {\n    // ensure that every cell-delimiting pipe has a space\n    // before it to distinguish it from an escaped pipe\n    var row = tableRow.replace(/\\|/g, function (match, offset, str) {\n      var escaped = false,\n          curr = offset;\n\n      while (--curr >= 0 && str[curr] === '\\\\') {\n        escaped = !escaped;\n      }\n\n      if (escaped) {\n        // odd number of slashes means | is escaped\n        // so we leave it alone\n        return '|';\n      } else {\n        // add space before unescaped |\n        return ' |';\n      }\n    }),\n        cells = row.split(/ \\|/);\n    var i = 0; // First/last cell in a row cannot be empty if it has no leading/trailing pipe\n\n    if (!cells[0].trim()) {\n      cells.shift();\n    }\n\n    if (!cells[cells.length - 1].trim()) {\n      cells.pop();\n    }\n\n    if (cells.length > count) {\n      cells.splice(count);\n    } else {\n      while (cells.length < count) {\n        cells.push('');\n      }\n    }\n\n    for (; i < cells.length; i++) {\n      // leading or trailing whitespace is ignored per the gfm spec\n      cells[i] = cells[i].trim().replace(/\\\\\\|/g, '|');\n    }\n\n    return cells;\n  } // Remove trailing 'c's. Equivalent to str.replace(/c*$/, '').\n  // /c*$/ is vulnerable to REDOS.\n  // invert: Remove suffix of non-c chars instead. Default falsey.\n\n  function rtrim(str, c, invert) {\n    var l = str.length;\n\n    if (l === 0) {\n      return '';\n    } // Length of suffix matching the invert condition.\n\n\n    var suffLen = 0; // Step left until we fail to match the invert condition.\n\n    while (suffLen < l) {\n      var currChar = str.charAt(l - suffLen - 1);\n\n      if (currChar === c && !invert) {\n        suffLen++;\n      } else if (currChar !== c && invert) {\n        suffLen++;\n      } else {\n        break;\n      }\n    }\n\n    return str.substr(0, l - suffLen);\n  }\n  function findClosingBracket(str, b) {\n    if (str.indexOf(b[1]) === -1) {\n      return -1;\n    }\n\n    var l = str.length;\n    var level = 0,\n        i = 0;\n\n    for (; i < l; i++) {\n      if (str[i] === '\\\\') {\n        i++;\n      } else if (str[i] === b[0]) {\n        level++;\n      } else if (str[i] === b[1]) {\n        level--;\n\n        if (level < 0) {\n          return i;\n        }\n      }\n    }\n\n    return -1;\n  }\n  function checkSanitizeDeprecation(opt) {\n    if (opt && opt.sanitize && !opt.silent) {\n      console.warn('marked(): sanitize and sanitizer parameters are deprecated since version 0.7.0, should not be used and will be removed in the future. Read more here: https://marked.js.org/#/USING_ADVANCED.md#options');\n    }\n  } // copied from https://stackoverflow.com/a/5450113/806777\n\n  function repeatString(pattern, count) {\n    if (count < 1) {\n      return '';\n    }\n\n    var result = '';\n\n    while (count > 1) {\n      if (count & 1) {\n        result += pattern;\n      }\n\n      count >>= 1;\n      pattern += pattern;\n    }\n\n    return result + pattern;\n  }\n\n  function outputLink(cap, link, raw, lexer) {\n    var href = link.href;\n    var title = link.title ? escape(link.title) : null;\n    var text = cap[1].replace(/\\\\([\\[\\]])/g, '$1');\n\n    if (cap[0].charAt(0) !== '!') {\n      lexer.state.inLink = true;\n      var token = {\n        type: 'link',\n        raw: raw,\n        href: href,\n        title: title,\n        text: text,\n        tokens: lexer.inlineTokens(text, [])\n      };\n      lexer.state.inLink = false;\n      return token;\n    } else {\n      return {\n        type: 'image',\n        raw: raw,\n        href: href,\n        title: title,\n        text: escape(text)\n      };\n    }\n  }\n\n  function indentCodeCompensation(raw, text) {\n    var matchIndentToCode = raw.match(/^(\\s+)(?:```)/);\n\n    if (matchIndentToCode === null) {\n      return text;\n    }\n\n    var indentToCode = matchIndentToCode[1];\n    return text.split('\\n').map(function (node) {\n      var matchIndentInNode = node.match(/^\\s+/);\n\n      if (matchIndentInNode === null) {\n        return node;\n      }\n\n      var indentInNode = matchIndentInNode[0];\n\n      if (indentInNode.length >= indentToCode.length) {\n        return node.slice(indentToCode.length);\n      }\n\n      return node;\n    }).join('\\n');\n  }\n  /**\n   * Tokenizer\n   */\n\n\n  var Tokenizer = /*#__PURE__*/function () {\n    function Tokenizer(options) {\n      this.options = options || exports.defaults;\n    }\n\n    var _proto = Tokenizer.prototype;\n\n    _proto.space = function space(src) {\n      var cap = this.rules.block.newline.exec(src);\n\n      if (cap) {\n        if (cap[0].length > 1) {\n          return {\n            type: 'space',\n            raw: cap[0]\n          };\n        }\n\n        return {\n          raw: '\\n'\n        };\n      }\n    };\n\n    _proto.code = function code(src) {\n      var cap = this.rules.block.code.exec(src);\n\n      if (cap) {\n        var text = cap[0].replace(/^ {1,4}/gm, '');\n        return {\n          type: 'code',\n          raw: cap[0],\n          codeBlockStyle: 'indented',\n          text: !this.options.pedantic ? rtrim(text, '\\n') : text\n        };\n      }\n    };\n\n    _proto.fences = function fences(src) {\n      var cap = this.rules.block.fences.exec(src);\n\n      if (cap) {\n        var raw = cap[0];\n        var text = indentCodeCompensation(raw, cap[3] || '');\n        return {\n          type: 'code',\n          raw: raw,\n          lang: cap[2] ? cap[2].trim() : cap[2],\n          text: text\n        };\n      }\n    };\n\n    _proto.heading = function heading(src) {\n      var cap = this.rules.block.heading.exec(src);\n\n      if (cap) {\n        var text = cap[2].trim(); // remove trailing #s\n\n        if (/#$/.test(text)) {\n          var trimmed = rtrim(text, '#');\n\n          if (this.options.pedantic) {\n            text = trimmed.trim();\n          } else if (!trimmed || / $/.test(trimmed)) {\n            // CommonMark requires space before trailing #s\n            text = trimmed.trim();\n          }\n        }\n\n        var token = {\n          type: 'heading',\n          raw: cap[0],\n          depth: cap[1].length,\n          text: text,\n          tokens: []\n        };\n        this.lexer.inline(token.text, token.tokens);\n        return token;\n      }\n    };\n\n    _proto.hr = function hr(src) {\n      var cap = this.rules.block.hr.exec(src);\n\n      if (cap) {\n        return {\n          type: 'hr',\n          raw: cap[0]\n        };\n      }\n    };\n\n    _proto.blockquote = function blockquote(src) {\n      var cap = this.rules.block.blockquote.exec(src);\n\n      if (cap) {\n        var text = cap[0].replace(/^ *> ?/gm, '');\n        return {\n          type: 'blockquote',\n          raw: cap[0],\n          tokens: this.lexer.blockTokens(text, []),\n          text: text\n        };\n      }\n    };\n\n    _proto.list = function list(src) {\n      var cap = this.rules.block.list.exec(src);\n\n      if (cap) {\n        var raw, istask, ischecked, indent, i, blankLine, endsWithBlankLine, line, lines, itemContents;\n        var bull = cap[1].trim();\n        var isordered = bull.length > 1;\n        var list = {\n          type: 'list',\n          raw: '',\n          ordered: isordered,\n          start: isordered ? +bull.slice(0, -1) : '',\n          loose: false,\n          items: []\n        };\n        bull = isordered ? \"\\\\d{1,9}\\\\\" + bull.slice(-1) : \"\\\\\" + bull;\n\n        if (this.options.pedantic) {\n          bull = isordered ? bull : '[*+-]';\n        } // Get next list item\n\n\n        var itemRegex = new RegExp(\"^( {0,3}\" + bull + \")((?: [^\\\\n]*| *)(?:\\\\n[^\\\\n]*)*(?:\\\\n|$))\"); // Get each top-level item\n\n        while (src) {\n          if (this.rules.block.hr.test(src)) {\n            // End list if we encounter an HR (possibly move into itemRegex?)\n            break;\n          }\n\n          if (!(cap = itemRegex.exec(src))) {\n            break;\n          }\n\n          lines = cap[2].split('\\n');\n\n          if (this.options.pedantic) {\n            indent = 2;\n            itemContents = lines[0].trimLeft();\n          } else {\n            indent = cap[2].search(/[^ ]/); // Find first non-space char\n\n            indent = cap[1].length + (indent > 4 ? 1 : indent); // intented code blocks after 4 spaces; indent is always 1\n\n            itemContents = lines[0].slice(indent - cap[1].length);\n          }\n\n          blankLine = false;\n          raw = cap[0];\n\n          if (!lines[0] && /^ *$/.test(lines[1])) {\n            // items begin with at most one blank line\n            raw = cap[1] + lines.slice(0, 2).join('\\n') + '\\n';\n            list.loose = true;\n            lines = [];\n          }\n\n          var nextBulletRegex = new RegExp(\"^ {0,\" + Math.min(3, indent - 1) + \"}(?:[*+-]|\\\\d{1,9}[.)])\");\n\n          for (i = 1; i < lines.length; i++) {\n            line = lines[i];\n\n            if (this.options.pedantic) {\n              // Re-align to follow commonmark nesting rules\n              line = line.replace(/^ {1,4}(?=( {4})*[^ ])/g, '  ');\n            } // End list item if found start of new bullet\n\n\n            if (nextBulletRegex.test(line)) {\n              raw = cap[1] + lines.slice(0, i).join('\\n') + '\\n';\n              break;\n            } // Until we encounter a blank line, item contents do not need indentation\n\n\n            if (!blankLine) {\n              if (!line.trim()) {\n                // Check if current line is empty\n                blankLine = true;\n              } // Dedent if possible\n\n\n              if (line.search(/[^ ]/) >= indent) {\n                itemContents += '\\n' + line.slice(indent);\n              } else {\n                itemContents += '\\n' + line;\n              }\n\n              continue;\n            } // Dedent this line\n\n\n            if (line.search(/[^ ]/) >= indent || !line.trim()) {\n              itemContents += '\\n' + line.slice(indent);\n              continue;\n            } else {\n              // Line was not properly indented; end of this item\n              raw = cap[1] + lines.slice(0, i).join('\\n') + '\\n';\n              break;\n            }\n          }\n\n          if (!list.loose) {\n            // If the previous item ended with a blank line, the list is loose\n            if (endsWithBlankLine) {\n              list.loose = true;\n            } else if (/\\n *\\n *$/.test(raw)) {\n              endsWithBlankLine = true;\n            }\n          } // Check for task list items\n\n\n          if (this.options.gfm) {\n            istask = /^\\[[ xX]\\] /.exec(itemContents);\n\n            if (istask) {\n              ischecked = istask[0] !== '[ ] ';\n              itemContents = itemContents.replace(/^\\[[ xX]\\] +/, '');\n            }\n          }\n\n          list.items.push({\n            type: 'list_item',\n            raw: raw,\n            task: !!istask,\n            checked: ischecked,\n            loose: false,\n            text: itemContents\n          });\n          list.raw += raw;\n          src = src.slice(raw.length);\n        } // Do not consume newlines at end of final item. Alternatively, make itemRegex *start* with any newlines to simplify/speed up endsWithBlankLine logic\n\n\n        list.items[list.items.length - 1].raw = raw.trimRight();\n        list.items[list.items.length - 1].text = itemContents.trimRight();\n        list.raw = list.raw.trimRight();\n        var l = list.items.length; // Item child tokens handled here at end because we needed to have the final item to trim it first\n\n        for (i = 0; i < l; i++) {\n          this.lexer.state.top = false;\n          list.items[i].tokens = this.lexer.blockTokens(list.items[i].text, []);\n\n          if (list.items[i].tokens.some(function (t) {\n            return t.type === 'space';\n          })) {\n            list.loose = true;\n            list.items[i].loose = true;\n          }\n        }\n\n        return list;\n      }\n    };\n\n    _proto.html = function html(src) {\n      var cap = this.rules.block.html.exec(src);\n\n      if (cap) {\n        var token = {\n          type: 'html',\n          raw: cap[0],\n          pre: !this.options.sanitizer && (cap[1] === 'pre' || cap[1] === 'script' || cap[1] === 'style'),\n          text: cap[0]\n        };\n\n        if (this.options.sanitize) {\n          token.type = 'paragraph';\n          token.text = this.options.sanitizer ? this.options.sanitizer(cap[0]) : escape(cap[0]);\n          token.tokens = [];\n          this.lexer.inline(token.text, token.tokens);\n        }\n\n        return token;\n      }\n    };\n\n    _proto.def = function def(src) {\n      var cap = this.rules.block.def.exec(src);\n\n      if (cap) {\n        if (cap[3]) cap[3] = cap[3].substring(1, cap[3].length - 1);\n        var tag = cap[1].toLowerCase().replace(/\\s+/g, ' ');\n        return {\n          type: 'def',\n          tag: tag,\n          raw: cap[0],\n          href: cap[2],\n          title: cap[3]\n        };\n      }\n    };\n\n    _proto.table = function table(src) {\n      var cap = this.rules.block.table.exec(src);\n\n      if (cap) {\n        var item = {\n          type: 'table',\n          header: splitCells(cap[1]).map(function (c) {\n            return {\n              text: c\n            };\n          }),\n          align: cap[2].replace(/^ *|\\| *$/g, '').split(/ *\\| */),\n          rows: cap[3] ? cap[3].replace(/\\n$/, '').split('\\n') : []\n        };\n\n        if (item.header.length === item.align.length) {\n          item.raw = cap[0];\n          var l = item.align.length;\n          var i, j, k, row;\n\n          for (i = 0; i < l; i++) {\n            if (/^ *-+: *$/.test(item.align[i])) {\n              item.align[i] = 'right';\n            } else if (/^ *:-+: *$/.test(item.align[i])) {\n              item.align[i] = 'center';\n            } else if (/^ *:-+ *$/.test(item.align[i])) {\n              item.align[i] = 'left';\n            } else {\n              item.align[i] = null;\n            }\n          }\n\n          l = item.rows.length;\n\n          for (i = 0; i < l; i++) {\n            item.rows[i] = splitCells(item.rows[i], item.header.length).map(function (c) {\n              return {\n                text: c\n              };\n            });\n          } // parse child tokens inside headers and cells\n          // header child tokens\n\n\n          l = item.header.length;\n\n          for (j = 0; j < l; j++) {\n            item.header[j].tokens = [];\n            this.lexer.inlineTokens(item.header[j].text, item.header[j].tokens);\n          } // cell child tokens\n\n\n          l = item.rows.length;\n\n          for (j = 0; j < l; j++) {\n            row = item.rows[j];\n\n            for (k = 0; k < row.length; k++) {\n              row[k].tokens = [];\n              this.lexer.inlineTokens(row[k].text, row[k].tokens);\n            }\n          }\n\n          return item;\n        }\n      }\n    };\n\n    _proto.lheading = function lheading(src) {\n      var cap = this.rules.block.lheading.exec(src);\n\n      if (cap) {\n        var token = {\n          type: 'heading',\n          raw: cap[0],\n          depth: cap[2].charAt(0) === '=' ? 1 : 2,\n          text: cap[1],\n          tokens: []\n        };\n        this.lexer.inline(token.text, token.tokens);\n        return token;\n      }\n    };\n\n    _proto.paragraph = function paragraph(src) {\n      var cap = this.rules.block.paragraph.exec(src);\n\n      if (cap) {\n        var token = {\n          type: 'paragraph',\n          raw: cap[0],\n          text: cap[1].charAt(cap[1].length - 1) === '\\n' ? cap[1].slice(0, -1) : cap[1],\n          tokens: []\n        };\n        this.lexer.inline(token.text, token.tokens);\n        return token;\n      }\n    };\n\n    _proto.text = function text(src) {\n      var cap = this.rules.block.text.exec(src);\n\n      if (cap) {\n        var token = {\n          type: 'text',\n          raw: cap[0],\n          text: cap[0],\n          tokens: []\n        };\n        this.lexer.inline(token.text, token.tokens);\n        return token;\n      }\n    };\n\n    _proto.escape = function escape$1(src) {\n      var cap = this.rules.inline.escape.exec(src);\n\n      if (cap) {\n        return {\n          type: 'escape',\n          raw: cap[0],\n          text: escape(cap[1])\n        };\n      }\n    };\n\n    _proto.tag = function tag(src) {\n      var cap = this.rules.inline.tag.exec(src);\n\n      if (cap) {\n        if (!this.lexer.state.inLink && /^<a /i.test(cap[0])) {\n          this.lexer.state.inLink = true;\n        } else if (this.lexer.state.inLink && /^<\\/a>/i.test(cap[0])) {\n          this.lexer.state.inLink = false;\n        }\n\n        if (!this.lexer.state.inRawBlock && /^<(pre|code|kbd|script)(\\s|>)/i.test(cap[0])) {\n          this.lexer.state.inRawBlock = true;\n        } else if (this.lexer.state.inRawBlock && /^<\\/(pre|code|kbd|script)(\\s|>)/i.test(cap[0])) {\n          this.lexer.state.inRawBlock = false;\n        }\n\n        return {\n          type: this.options.sanitize ? 'text' : 'html',\n          raw: cap[0],\n          inLink: this.lexer.state.inLink,\n          inRawBlock: this.lexer.state.inRawBlock,\n          text: this.options.sanitize ? this.options.sanitizer ? this.options.sanitizer(cap[0]) : escape(cap[0]) : cap[0]\n        };\n      }\n    };\n\n    _proto.link = function link(src) {\n      var cap = this.rules.inline.link.exec(src);\n\n      if (cap) {\n        var trimmedUrl = cap[2].trim();\n\n        if (!this.options.pedantic && /^</.test(trimmedUrl)) {\n          // commonmark requires matching angle brackets\n          if (!/>$/.test(trimmedUrl)) {\n            return;\n          } // ending angle bracket cannot be escaped\n\n\n          var rtrimSlash = rtrim(trimmedUrl.slice(0, -1), '\\\\');\n\n          if ((trimmedUrl.length - rtrimSlash.length) % 2 === 0) {\n            return;\n          }\n        } else {\n          // find closing parenthesis\n          var lastParenIndex = findClosingBracket(cap[2], '()');\n\n          if (lastParenIndex > -1) {\n            var start = cap[0].indexOf('!') === 0 ? 5 : 4;\n            var linkLen = start + cap[1].length + lastParenIndex;\n            cap[2] = cap[2].substring(0, lastParenIndex);\n            cap[0] = cap[0].substring(0, linkLen).trim();\n            cap[3] = '';\n          }\n        }\n\n        var href = cap[2];\n        var title = '';\n\n        if (this.options.pedantic) {\n          // split pedantic href and title\n          var link = /^([^'\"]*[^\\s])\\s+(['\"])(.*)\\2/.exec(href);\n\n          if (link) {\n            href = link[1];\n            title = link[3];\n          }\n        } else {\n          title = cap[3] ? cap[3].slice(1, -1) : '';\n        }\n\n        href = href.trim();\n\n        if (/^</.test(href)) {\n          if (this.options.pedantic && !/>$/.test(trimmedUrl)) {\n            // pedantic allows starting angle bracket without ending angle bracket\n            href = href.slice(1);\n          } else {\n            href = href.slice(1, -1);\n          }\n        }\n\n        return outputLink(cap, {\n          href: href ? href.replace(this.rules.inline._escapes, '$1') : href,\n          title: title ? title.replace(this.rules.inline._escapes, '$1') : title\n        }, cap[0], this.lexer);\n      }\n    };\n\n    _proto.reflink = function reflink(src, links) {\n      var cap;\n\n      if ((cap = this.rules.inline.reflink.exec(src)) || (cap = this.rules.inline.nolink.exec(src))) {\n        var link = (cap[2] || cap[1]).replace(/\\s+/g, ' ');\n        link = links[link.toLowerCase()];\n\n        if (!link || !link.href) {\n          var text = cap[0].charAt(0);\n          return {\n            type: 'text',\n            raw: text,\n            text: text\n          };\n        }\n\n        return outputLink(cap, link, cap[0], this.lexer);\n      }\n    };\n\n    _proto.emStrong = function emStrong(src, maskedSrc, prevChar) {\n      if (prevChar === void 0) {\n        prevChar = '';\n      }\n\n      var match = this.rules.inline.emStrong.lDelim.exec(src);\n      if (!match) return; // _ can't be between two alphanumerics. \\p{L}\\p{N} includes non-english alphabet/numbers as well\n\n      if (match[3] && prevChar.match(/(?:[0-9A-Za-z\\xAA\\xB2\\xB3\\xB5\\xB9\\xBA\\xBC-\\xBE\\xC0-\\xD6\\xD8-\\xF6\\xF8-\\u02C1\\u02C6-\\u02D1\\u02E0-\\u02E4\\u02EC\\u02EE\\u0370-\\u0374\\u0376\\u0377\\u037A-\\u037D\\u037F\\u0386\\u0388-\\u038A\\u038C\\u038E-\\u03A1\\u03A3-\\u03F5\\u03F7-\\u0481\\u048A-\\u052F\\u0531-\\u0556\\u0559\\u0560-\\u0588\\u05D0-\\u05EA\\u05EF-\\u05F2\\u0620-\\u064A\\u0660-\\u0669\\u066E\\u066F\\u0671-\\u06D3\\u06D5\\u06E5\\u06E6\\u06EE-\\u06FC\\u06FF\\u0710\\u0712-\\u072F\\u074D-\\u07A5\\u07B1\\u07C0-\\u07EA\\u07F4\\u07F5\\u07FA\\u0800-\\u0815\\u081A\\u0824\\u0828\\u0840-\\u0858\\u0860-\\u086A\\u0870-\\u0887\\u0889-\\u088E\\u08A0-\\u08C9\\u0904-\\u0939\\u093D\\u0950\\u0958-\\u0961\\u0966-\\u096F\\u0971-\\u0980\\u0985-\\u098C\\u098F\\u0990\\u0993-\\u09A8\\u09AA-\\u09B0\\u09B2\\u09B6-\\u09B9\\u09BD\\u09CE\\u09DC\\u09DD\\u09DF-\\u09E1\\u09E6-\\u09F1\\u09F4-\\u09F9\\u09FC\\u0A05-\\u0A0A\\u0A0F\\u0A10\\u0A13-\\u0A28\\u0A2A-\\u0A30\\u0A32\\u0A33\\u0A35\\u0A36\\u0A38\\u0A39\\u0A59-\\u0A5C\\u0A5E\\u0A66-\\u0A6F\\u0A72-\\u0A74\\u0A85-\\u0A8D\\u0A8F-\\u0A91\\u0A93-\\u0AA8\\u0AAA-\\u0AB0\\u0AB2\\u0AB3\\u0AB5-\\u0AB9\\u0ABD\\u0AD0\\u0AE0\\u0AE1\\u0AE6-\\u0AEF\\u0AF9\\u0B05-\\u0B0C\\u0B0F\\u0B10\\u0B13-\\u0B28\\u0B2A-\\u0B30\\u0B32\\u0B33\\u0B35-\\u0B39\\u0B3D\\u0B5C\\u0B5D\\u0B5F-\\u0B61\\u0B66-\\u0B6F\\u0B71-\\u0B77\\u0B83\\u0B85-\\u0B8A\\u0B8E-\\u0B90\\u0B92-\\u0B95\\u0B99\\u0B9A\\u0B9C\\u0B9E\\u0B9F\\u0BA3\\u0BA4\\u0BA8-\\u0BAA\\u0BAE-\\u0BB9\\u0BD0\\u0BE6-\\u0BF2\\u0C05-\\u0C0C\\u0C0E-\\u0C10\\u0C12-\\u0C28\\u0C2A-\\u0C39\\u0C3D\\u0C58-\\u0C5A\\u0C5D\\u0C60\\u0C61\\u0C66-\\u0C6F\\u0C78-\\u0C7E\\u0C80\\u0C85-\\u0C8C\\u0C8E-\\u0C90\\u0C92-\\u0CA8\\u0CAA-\\u0CB3\\u0CB5-\\u0CB9\\u0CBD\\u0CDD\\u0CDE\\u0CE0\\u0CE1\\u0CE6-\\u0CEF\\u0CF1\\u0CF2\\u0D04-\\u0D0C\\u0D0E-\\u0D10\\u0D12-\\u0D3A\\u0D3D\\u0D4E\\u0D54-\\u0D56\\u0D58-\\u0D61\\u0D66-\\u0D78\\u0D7A-\\u0D7F\\u0D85-\\u0D96\\u0D9A-\\u0DB1\\u0DB3-\\u0DBB\\u0DBD\\u0DC0-\\u0DC6\\u0DE6-\\u0DEF\\u0E01-\\u0E30\\u0E32\\u0E33\\u0E40-\\u0E46\\u0E50-\\u0E59\\u0E81\\u0E82\\u0E84\\u0E86-\\u0E8A\\u0E8C-\\u0EA3\\u0EA5\\u0EA7-\\u0EB0\\u0EB2\\u0EB3\\u0EBD\\u0EC0-\\u0EC4\\u0EC6\\u0ED0-\\u0ED9\\u0EDC-\\u0EDF\\u0F00\\u0F20-\\u0F33\\u0F40-\\u0F47\\u0F49-\\u0F6C\\u0F88-\\u0F8C\\u1000-\\u102A\\u103F-\\u1049\\u1050-\\u1055\\u105A-\\u105D\\u1061\\u1065\\u1066\\u106E-\\u1070\\u1075-\\u1081\\u108E\\u1090-\\u1099\\u10A0-\\u10C5\\u10C7\\u10CD\\u10D0-\\u10FA\\u10FC-\\u1248\\u124A-\\u124D\\u1250-\\u1256\\u1258\\u125A-\\u125D\\u1260-\\u1288\\u128A-\\u128D\\u1290-\\u12B0\\u12B2-\\u12B5\\u12B8-\\u12BE\\u12C0\\u12C2-\\u12C5\\u12C8-\\u12D6\\u12D8-\\u1310\\u1312-\\u1315\\u1318-\\u135A\\u1369-\\u137C\\u1380-\\u138F\\u13A0-\\u13F5\\u13F8-\\u13FD\\u1401-\\u166C\\u166F-\\u167F\\u1681-\\u169A\\u16A0-\\u16EA\\u16EE-\\u16F8\\u1700-\\u1711\\u171F-\\u1731\\u1740-\\u1751\\u1760-\\u176C\\u176E-\\u1770\\u1780-\\u17B3\\u17D7\\u17DC\\u17E0-\\u17E9\\u17F0-\\u17F9\\u1810-\\u1819\\u1820-\\u1878\\u1880-\\u1884\\u1887-\\u18A8\\u18AA\\u18B0-\\u18F5\\u1900-\\u191E\\u1946-\\u196D\\u1970-\\u1974\\u1980-\\u19AB\\u19B0-\\u19C9\\u19D0-\\u19DA\\u1A00-\\u1A16\\u1A20-\\u1A54\\u1A80-\\u1A89\\u1A90-\\u1A99\\u1AA7\\u1B05-\\u1B33\\u1B45-\\u1B4C\\u1B50-\\u1B59\\u1B83-\\u1BA0\\u1BAE-\\u1BE5\\u1C00-\\u1C23\\u1C40-\\u1C49\\u1C4D-\\u1C7D\\u1C80-\\u1C88\\u1C90-\\u1CBA\\u1CBD-\\u1CBF\\u1CE9-\\u1CEC\\u1CEE-\\u1CF3\\u1CF5\\u1CF6\\u1CFA\\u1D00-\\u1DBF\\u1E00-\\u1F15\\u1F18-\\u1F1D\\u1F20-\\u1F45\\u1F48-\\u1F4D\\u1F50-\\u1F57\\u1F59\\u1F5B\\u1F5D\\u1F5F-\\u1F7D\\u1F80-\\u1FB4\\u1FB6-\\u1FBC\\u1FBE\\u1FC2-\\u1FC4\\u1FC6-\\u1FCC\\u1FD0-\\u1FD3\\u1FD6-\\u1FDB\\u1FE0-\\u1FEC\\u1FF2-\\u1FF4\\u1FF6-\\u1FFC\\u2070\\u2071\\u2074-\\u2079\\u207F-\\u2089\\u2090-\\u209C\\u2102\\u2107\\u210A-\\u2113\\u2115\\u2119-\\u211D\\u2124\\u2126\\u2128\\u212A-\\u212D\\u212F-\\u2139\\u213C-\\u213F\\u2145-\\u2149\\u214E\\u2150-\\u2189\\u2460-\\u249B\\u24EA-\\u24FF\\u2776-\\u2793\\u2C00-\\u2CE4\\u2CEB-\\u2CEE\\u2CF2\\u2CF3\\u2CFD\\u2D00-\\u2D25\\u2D27\\u2D2D\\u2D30-\\u2D67\\u2D6F\\u2D80-\\u2D96\\u2DA0-\\u2DA6\\u2DA8-\\u2DAE\\u2DB0-\\u2DB6\\u2DB8-\\u2DBE\\u2DC0-\\u2DC6\\u2DC8-\\u2DCE\\u2DD0-\\u2DD6\\u2DD8-\\u2DDE\\u2E2F\\u3005-\\u3007\\u3021-\\u3029\\u3031-\\u3035\\u3038-\\u303C\\u3041-\\u3096\\u309D-\\u309F\\u30A1-\\u30FA\\u30FC-\\u30FF\\u3105-\\u312F\\u3131-\\u318E\\u3192-\\u3195\\u31A0-\\u31BF\\u31F0-\\u31FF\\u3220-\\u3229\\u3248-\\u324F\\u3251-\\u325F\\u3280-\\u3289\\u32B1-\\u32BF\\u3400-\\u4DBF\\u4E00-\\uA48C\\uA4D0-\\uA4FD\\uA500-\\uA60C\\uA610-\\uA62B\\uA640-\\uA66E\\uA67F-\\uA69D\\uA6A0-\\uA6EF\\uA717-\\uA71F\\uA722-\\uA788\\uA78B-\\uA7CA\\uA7D0\\uA7D1\\uA7D3\\uA7D5-\\uA7D9\\uA7F2-\\uA801\\uA803-\\uA805\\uA807-\\uA80A\\uA80C-\\uA822\\uA830-\\uA835\\uA840-\\uA873\\uA882-\\uA8B3\\uA8D0-\\uA8D9\\uA8F2-\\uA8F7\\uA8FB\\uA8FD\\uA8FE\\uA900-\\uA925\\uA930-\\uA946\\uA960-\\uA97C\\uA984-\\uA9B2\\uA9CF-\\uA9D9\\uA9E0-\\uA9E4\\uA9E6-\\uA9FE\\uAA00-\\uAA28\\uAA40-\\uAA42\\uAA44-\\uAA4B\\uAA50-\\uAA59\\uAA60-\\uAA76\\uAA7A\\uAA7E-\\uAAAF\\uAAB1\\uAAB5\\uAAB6\\uAAB9-\\uAABD\\uAAC0\\uAAC2\\uAADB-\\uAADD\\uAAE0-\\uAAEA\\uAAF2-\\uAAF4\\uAB01-\\uAB06\\uAB09-\\uAB0E\\uAB11-\\uAB16\\uAB20-\\uAB26\\uAB28-\\uAB2E\\uAB30-\\uAB5A\\uAB5C-\\uAB69\\uAB70-\\uABE2\\uABF0-\\uABF9\\uAC00-\\uD7A3\\uD7B0-\\uD7C6\\uD7CB-\\uD7FB\\uF900-\\uFA6D\\uFA70-\\uFAD9\\uFB00-\\uFB06\\uFB13-\\uFB17\\uFB1D\\uFB1F-\\uFB28\\uFB2A-\\uFB36\\uFB38-\\uFB3C\\uFB3E\\uFB40\\uFB41\\uFB43\\uFB44\\uFB46-\\uFBB1\\uFBD3-\\uFD3D\\uFD50-\\uFD8F\\uFD92-\\uFDC7\\uFDF0-\\uFDFB\\uFE70-\\uFE74\\uFE76-\\uFEFC\\uFF10-\\uFF19\\uFF21-\\uFF3A\\uFF41-\\uFF5A\\uFF66-\\uFFBE\\uFFC2-\\uFFC7\\uFFCA-\\uFFCF\\uFFD2-\\uFFD7\\uFFDA-\\uFFDC]|\\uD800[\\uDC00-\\uDC0B\\uDC0D-\\uDC26\\uDC28-\\uDC3A\\uDC3C\\uDC3D\\uDC3F-\\uDC4D\\uDC50-\\uDC5D\\uDC80-\\uDCFA\\uDD07-\\uDD33\\uDD40-\\uDD78\\uDD8A\\uDD8B\\uDE80-\\uDE9C\\uDEA0-\\uDED0\\uDEE1-\\uDEFB\\uDF00-\\uDF23\\uDF2D-\\uDF4A\\uDF50-\\uDF75\\uDF80-\\uDF9D\\uDFA0-\\uDFC3\\uDFC8-\\uDFCF\\uDFD1-\\uDFD5]|\\uD801[\\uDC00-\\uDC9D\\uDCA0-\\uDCA9\\uDCB0-\\uDCD3\\uDCD8-\\uDCFB\\uDD00-\\uDD27\\uDD30-\\uDD63\\uDD70-\\uDD7A\\uDD7C-\\uDD8A\\uDD8C-\\uDD92\\uDD94\\uDD95\\uDD97-\\uDDA1\\uDDA3-\\uDDB1\\uDDB3-\\uDDB9\\uDDBB\\uDDBC\\uDE00-\\uDF36\\uDF40-\\uDF55\\uDF60-\\uDF67\\uDF80-\\uDF85\\uDF87-\\uDFB0\\uDFB2-\\uDFBA]|\\uD802[\\uDC00-\\uDC05\\uDC08\\uDC0A-\\uDC35\\uDC37\\uDC38\\uDC3C\\uDC3F-\\uDC55\\uDC58-\\uDC76\\uDC79-\\uDC9E\\uDCA7-\\uDCAF\\uDCE0-\\uDCF2\\uDCF4\\uDCF5\\uDCFB-\\uDD1B\\uDD20-\\uDD39\\uDD80-\\uDDB7\\uDDBC-\\uDDCF\\uDDD2-\\uDE00\\uDE10-\\uDE13\\uDE15-\\uDE17\\uDE19-\\uDE35\\uDE40-\\uDE48\\uDE60-\\uDE7E\\uDE80-\\uDE9F\\uDEC0-\\uDEC7\\uDEC9-\\uDEE4\\uDEEB-\\uDEEF\\uDF00-\\uDF35\\uDF40-\\uDF55\\uDF58-\\uDF72\\uDF78-\\uDF91\\uDFA9-\\uDFAF]|\\uD803[\\uDC00-\\uDC48\\uDC80-\\uDCB2\\uDCC0-\\uDCF2\\uDCFA-\\uDD23\\uDD30-\\uDD39\\uDE60-\\uDE7E\\uDE80-\\uDEA9\\uDEB0\\uDEB1\\uDF00-\\uDF27\\uDF30-\\uDF45\\uDF51-\\uDF54\\uDF70-\\uDF81\\uDFB0-\\uDFCB\\uDFE0-\\uDFF6]|\\uD804[\\uDC03-\\uDC37\\uDC52-\\uDC6F\\uDC71\\uDC72\\uDC75\\uDC83-\\uDCAF\\uDCD0-\\uDCE8\\uDCF0-\\uDCF9\\uDD03-\\uDD26\\uDD36-\\uDD3F\\uDD44\\uDD47\\uDD50-\\uDD72\\uDD76\\uDD83-\\uDDB2\\uDDC1-\\uDDC4\\uDDD0-\\uDDDA\\uDDDC\\uDDE1-\\uDDF4\\uDE00-\\uDE11\\uDE13-\\uDE2B\\uDE80-\\uDE86\\uDE88\\uDE8A-\\uDE8D\\uDE8F-\\uDE9D\\uDE9F-\\uDEA8\\uDEB0-\\uDEDE\\uDEF0-\\uDEF9\\uDF05-\\uDF0C\\uDF0F\\uDF10\\uDF13-\\uDF28\\uDF2A-\\uDF30\\uDF32\\uDF33\\uDF35-\\uDF39\\uDF3D\\uDF50\\uDF5D-\\uDF61]|\\uD805[\\uDC00-\\uDC34\\uDC47-\\uDC4A\\uDC50-\\uDC59\\uDC5F-\\uDC61\\uDC80-\\uDCAF\\uDCC4\\uDCC5\\uDCC7\\uDCD0-\\uDCD9\\uDD80-\\uDDAE\\uDDD8-\\uDDDB\\uDE00-\\uDE2F\\uDE44\\uDE50-\\uDE59\\uDE80-\\uDEAA\\uDEB8\\uDEC0-\\uDEC9\\uDF00-\\uDF1A\\uDF30-\\uDF3B\\uDF40-\\uDF46]|\\uD806[\\uDC00-\\uDC2B\\uDCA0-\\uDCF2\\uDCFF-\\uDD06\\uDD09\\uDD0C-\\uDD13\\uDD15\\uDD16\\uDD18-\\uDD2F\\uDD3F\\uDD41\\uDD50-\\uDD59\\uDDA0-\\uDDA7\\uDDAA-\\uDDD0\\uDDE1\\uDDE3\\uDE00\\uDE0B-\\uDE32\\uDE3A\\uDE50\\uDE5C-\\uDE89\\uDE9D\\uDEB0-\\uDEF8]|\\uD807[\\uDC00-\\uDC08\\uDC0A-\\uDC2E\\uDC40\\uDC50-\\uDC6C\\uDC72-\\uDC8F\\uDD00-\\uDD06\\uDD08\\uDD09\\uDD0B-\\uDD30\\uDD46\\uDD50-\\uDD59\\uDD60-\\uDD65\\uDD67\\uDD68\\uDD6A-\\uDD89\\uDD98\\uDDA0-\\uDDA9\\uDEE0-\\uDEF2\\uDFB0\\uDFC0-\\uDFD4]|\\uD808[\\uDC00-\\uDF99]|\\uD809[\\uDC00-\\uDC6E\\uDC80-\\uDD43]|\\uD80B[\\uDF90-\\uDFF0]|[\\uD80C\\uD81C-\\uD820\\uD822\\uD840-\\uD868\\uD86A-\\uD86C\\uD86F-\\uD872\\uD874-\\uD879\\uD880-\\uD883][\\uDC00-\\uDFFF]|\\uD80D[\\uDC00-\\uDC2E]|\\uD811[\\uDC00-\\uDE46]|\\uD81A[\\uDC00-\\uDE38\\uDE40-\\uDE5E\\uDE60-\\uDE69\\uDE70-\\uDEBE\\uDEC0-\\uDEC9\\uDED0-\\uDEED\\uDF00-\\uDF2F\\uDF40-\\uDF43\\uDF50-\\uDF59\\uDF5B-\\uDF61\\uDF63-\\uDF77\\uDF7D-\\uDF8F]|\\uD81B[\\uDE40-\\uDE96\\uDF00-\\uDF4A\\uDF50\\uDF93-\\uDF9F\\uDFE0\\uDFE1\\uDFE3]|\\uD821[\\uDC00-\\uDFF7]|\\uD823[\\uDC00-\\uDCD5\\uDD00-\\uDD08]|\\uD82B[\\uDFF0-\\uDFF3\\uDFF5-\\uDFFB\\uDFFD\\uDFFE]|\\uD82C[\\uDC00-\\uDD22\\uDD50-\\uDD52\\uDD64-\\uDD67\\uDD70-\\uDEFB]|\\uD82F[\\uDC00-\\uDC6A\\uDC70-\\uDC7C\\uDC80-\\uDC88\\uDC90-\\uDC99]|\\uD834[\\uDEE0-\\uDEF3\\uDF60-\\uDF78]|\\uD835[\\uDC00-\\uDC54\\uDC56-\\uDC9C\\uDC9E\\uDC9F\\uDCA2\\uDCA5\\uDCA6\\uDCA9-\\uDCAC\\uDCAE-\\uDCB9\\uDCBB\\uDCBD-\\uDCC3\\uDCC5-\\uDD05\\uDD07-\\uDD0A\\uDD0D-\\uDD14\\uDD16-\\uDD1C\\uDD1E-\\uDD39\\uDD3B-\\uDD3E\\uDD40-\\uDD44\\uDD46\\uDD4A-\\uDD50\\uDD52-\\uDEA5\\uDEA8-\\uDEC0\\uDEC2-\\uDEDA\\uDEDC-\\uDEFA\\uDEFC-\\uDF14\\uDF16-\\uDF34\\uDF36-\\uDF4E\\uDF50-\\uDF6E\\uDF70-\\uDF88\\uDF8A-\\uDFA8\\uDFAA-\\uDFC2\\uDFC4-\\uDFCB\\uDFCE-\\uDFFF]|\\uD837[\\uDF00-\\uDF1E]|\\uD838[\\uDD00-\\uDD2C\\uDD37-\\uDD3D\\uDD40-\\uDD49\\uDD4E\\uDE90-\\uDEAD\\uDEC0-\\uDEEB\\uDEF0-\\uDEF9]|\\uD839[\\uDFE0-\\uDFE6\\uDFE8-\\uDFEB\\uDFED\\uDFEE\\uDFF0-\\uDFFE]|\\uD83A[\\uDC00-\\uDCC4\\uDCC7-\\uDCCF\\uDD00-\\uDD43\\uDD4B\\uDD50-\\uDD59]|\\uD83B[\\uDC71-\\uDCAB\\uDCAD-\\uDCAF\\uDCB1-\\uDCB4\\uDD01-\\uDD2D\\uDD2F-\\uDD3D\\uDE00-\\uDE03\\uDE05-\\uDE1F\\uDE21\\uDE22\\uDE24\\uDE27\\uDE29-\\uDE32\\uDE34-\\uDE37\\uDE39\\uDE3B\\uDE42\\uDE47\\uDE49\\uDE4B\\uDE4D-\\uDE4F\\uDE51\\uDE52\\uDE54\\uDE57\\uDE59\\uDE5B\\uDE5D\\uDE5F\\uDE61\\uDE62\\uDE64\\uDE67-\\uDE6A\\uDE6C-\\uDE72\\uDE74-\\uDE77\\uDE79-\\uDE7C\\uDE7E\\uDE80-\\uDE89\\uDE8B-\\uDE9B\\uDEA1-\\uDEA3\\uDEA5-\\uDEA9\\uDEAB-\\uDEBB]|\\uD83C[\\uDD00-\\uDD0C]|\\uD83E[\\uDFF0-\\uDFF9]|\\uD869[\\uDC00-\\uDEDF\\uDF00-\\uDFFF]|\\uD86D[\\uDC00-\\uDF38\\uDF40-\\uDFFF]|\\uD86E[\\uDC00-\\uDC1D\\uDC20-\\uDFFF]|\\uD873[\\uDC00-\\uDEA1\\uDEB0-\\uDFFF]|\\uD87A[\\uDC00-\\uDFE0]|\\uD87E[\\uDC00-\\uDE1D]|\\uD884[\\uDC00-\\uDF4A])/)) return;\n      var nextChar = match[1] || match[2] || '';\n\n      if (!nextChar || nextChar && (prevChar === '' || this.rules.inline.punctuation.exec(prevChar))) {\n        var lLength = match[0].length - 1;\n        var rDelim,\n            rLength,\n            delimTotal = lLength,\n            midDelimTotal = 0;\n        var endReg = match[0][0] === '*' ? this.rules.inline.emStrong.rDelimAst : this.rules.inline.emStrong.rDelimUnd;\n        endReg.lastIndex = 0; // Clip maskedSrc to same section of string as src (move to lexer?)\n\n        maskedSrc = maskedSrc.slice(-1 * src.length + lLength);\n\n        while ((match = endReg.exec(maskedSrc)) != null) {\n          rDelim = match[1] || match[2] || match[3] || match[4] || match[5] || match[6];\n          if (!rDelim) continue; // skip single * in __abc*abc__\n\n          rLength = rDelim.length;\n\n          if (match[3] || match[4]) {\n            // found another Left Delim\n            delimTotal += rLength;\n            continue;\n          } else if (match[5] || match[6]) {\n            // either Left or Right Delim\n            if (lLength % 3 && !((lLength + rLength) % 3)) {\n              midDelimTotal += rLength;\n              continue; // CommonMark Emphasis Rules 9-10\n            }\n          }\n\n          delimTotal -= rLength;\n          if (delimTotal > 0) continue; // Haven't found enough closing delimiters\n          // Remove extra characters. *a*** -> *a*\n\n          rLength = Math.min(rLength, rLength + delimTotal + midDelimTotal); // Create `em` if smallest delimiter has odd char count. *a***\n\n          if (Math.min(lLength, rLength) % 2) {\n            var _text = src.slice(1, lLength + match.index + rLength);\n\n            return {\n              type: 'em',\n              raw: src.slice(0, lLength + match.index + rLength + 1),\n              text: _text,\n              tokens: this.lexer.inlineTokens(_text, [])\n            };\n          } // Create 'strong' if smallest delimiter has even char count. **a***\n\n\n          var text = src.slice(2, lLength + match.index + rLength - 1);\n          return {\n            type: 'strong',\n            raw: src.slice(0, lLength + match.index + rLength + 1),\n            text: text,\n            tokens: this.lexer.inlineTokens(text, [])\n          };\n        }\n      }\n    };\n\n    _proto.codespan = function codespan(src) {\n      var cap = this.rules.inline.code.exec(src);\n\n      if (cap) {\n        var text = cap[2].replace(/\\n/g, ' ');\n        var hasNonSpaceChars = /[^ ]/.test(text);\n        var hasSpaceCharsOnBothEnds = /^ /.test(text) && / $/.test(text);\n\n        if (hasNonSpaceChars && hasSpaceCharsOnBothEnds) {\n          text = text.substring(1, text.length - 1);\n        }\n\n        text = escape(text, true);\n        return {\n          type: 'codespan',\n          raw: cap[0],\n          text: text\n        };\n      }\n    };\n\n    _proto.br = function br(src) {\n      var cap = this.rules.inline.br.exec(src);\n\n      if (cap) {\n        return {\n          type: 'br',\n          raw: cap[0]\n        };\n      }\n    };\n\n    _proto.del = function del(src) {\n      var cap = this.rules.inline.del.exec(src);\n\n      if (cap) {\n        return {\n          type: 'del',\n          raw: cap[0],\n          text: cap[2],\n          tokens: this.lexer.inlineTokens(cap[2], [])\n        };\n      }\n    };\n\n    _proto.autolink = function autolink(src, mangle) {\n      var cap = this.rules.inline.autolink.exec(src);\n\n      if (cap) {\n        var text, href;\n\n        if (cap[2] === '@') {\n          text = escape(this.options.mangle ? mangle(cap[1]) : cap[1]);\n          href = 'mailto:' + text;\n        } else {\n          text = escape(cap[1]);\n          href = text;\n        }\n\n        return {\n          type: 'link',\n          raw: cap[0],\n          text: text,\n          href: href,\n          tokens: [{\n            type: 'text',\n            raw: text,\n            text: text\n          }]\n        };\n      }\n    };\n\n    _proto.url = function url(src, mangle) {\n      var cap;\n\n      if (cap = this.rules.inline.url.exec(src)) {\n        var text, href;\n\n        if (cap[2] === '@') {\n          text = escape(this.options.mangle ? mangle(cap[0]) : cap[0]);\n          href = 'mailto:' + text;\n        } else {\n          // do extended autolink path validation\n          var prevCapZero;\n\n          do {\n            prevCapZero = cap[0];\n            cap[0] = this.rules.inline._backpedal.exec(cap[0])[0];\n          } while (prevCapZero !== cap[0]);\n\n          text = escape(cap[0]);\n\n          if (cap[1] === 'www.') {\n            href = 'http://' + text;\n          } else {\n            href = text;\n          }\n        }\n\n        return {\n          type: 'link',\n          raw: cap[0],\n          text: text,\n          href: href,\n          tokens: [{\n            type: 'text',\n            raw: text,\n            text: text\n          }]\n        };\n      }\n    };\n\n    _proto.inlineText = function inlineText(src, smartypants) {\n      var cap = this.rules.inline.text.exec(src);\n\n      if (cap) {\n        var text;\n\n        if (this.lexer.state.inRawBlock) {\n          text = this.options.sanitize ? this.options.sanitizer ? this.options.sanitizer(cap[0]) : escape(cap[0]) : cap[0];\n        } else {\n          text = escape(this.options.smartypants ? smartypants(cap[0]) : cap[0]);\n        }\n\n        return {\n          type: 'text',\n          raw: cap[0],\n          text: text\n        };\n      }\n    };\n\n    return Tokenizer;\n  }();\n\n  /**\n   * Block-Level Grammar\n   */\n\n  var block = {\n    newline: /^(?: *(?:\\n|$))+/,\n    code: /^( {4}[^\\n]+(?:\\n(?: *(?:\\n|$))*)?)+/,\n    fences: /^ {0,3}(`{3,}(?=[^`\\n]*\\n)|~{3,})([^\\n]*)\\n(?:|([\\s\\S]*?)\\n)(?: {0,3}\\1[~`]* *(?=\\n|$)|$)/,\n    hr: /^ {0,3}((?:- *){3,}|(?:_ *){3,}|(?:\\* *){3,})(?:\\n+|$)/,\n    heading: /^ {0,3}(#{1,6})(?=\\s|$)(.*)(?:\\n+|$)/,\n    blockquote: /^( {0,3}> ?(paragraph|[^\\n]*)(?:\\n|$))+/,\n    list: /^( {0,3}bull)( [^\\n]+?)?(?:\\n|$)/,\n    html: '^ {0,3}(?:' // optional indentation\n    + '<(script|pre|style|textarea)[\\\\s>][\\\\s\\\\S]*?(?:</\\\\1>[^\\\\n]*\\\\n+|$)' // (1)\n    + '|comment[^\\\\n]*(\\\\n+|$)' // (2)\n    + '|<\\\\?[\\\\s\\\\S]*?(?:\\\\?>\\\\n*|$)' // (3)\n    + '|<![A-Z][\\\\s\\\\S]*?(?:>\\\\n*|$)' // (4)\n    + '|<!\\\\[CDATA\\\\[[\\\\s\\\\S]*?(?:\\\\]\\\\]>\\\\n*|$)' // (5)\n    + '|</?(tag)(?: +|\\\\n|/?>)[\\\\s\\\\S]*?(?:(?:\\\\n *)+\\\\n|$)' // (6)\n    + '|<(?!script|pre|style|textarea)([a-z][\\\\w-]*)(?:attribute)*? */?>(?=[ \\\\t]*(?:\\\\n|$))[\\\\s\\\\S]*?(?:(?:\\\\n *)+\\\\n|$)' // (7) open tag\n    + '|</(?!script|pre|style|textarea)[a-z][\\\\w-]*\\\\s*>(?=[ \\\\t]*(?:\\\\n|$))[\\\\s\\\\S]*?(?:(?:\\\\n *)+\\\\n|$)' // (7) closing tag\n    + ')',\n    def: /^ {0,3}\\[(label)\\]: *\\n? *<?([^\\s>]+)>?(?:(?: +\\n? *| *\\n *)(title))? *(?:\\n+|$)/,\n    table: noopTest,\n    lheading: /^([^\\n]+)\\n {0,3}(=+|-+) *(?:\\n+|$)/,\n    // regex template, placeholders will be replaced according to different paragraph\n    // interruption rules of commonmark and the original markdown spec:\n    _paragraph: /^([^\\n]+(?:\\n(?!hr|heading|lheading|blockquote|fences|list|html| +\\n)[^\\n]+)*)/,\n    text: /^[^\\n]+/\n  };\n  block._label = /(?!\\s*\\])(?:\\\\[\\[\\]]|[^\\[\\]])+/;\n  block._title = /(?:\"(?:\\\\\"?|[^\"\\\\])*\"|'[^'\\n]*(?:\\n[^'\\n]+)*\\n?'|\\([^()]*\\))/;\n  block.def = edit(block.def).replace('label', block._label).replace('title', block._title).getRegex();\n  block.bullet = /(?:[*+-]|\\d{1,9}[.)])/;\n  block.listItemStart = edit(/^( *)(bull) */).replace('bull', block.bullet).getRegex();\n  block.list = edit(block.list).replace(/bull/g, block.bullet).replace('hr', '\\\\n+(?=\\\\1?(?:(?:- *){3,}|(?:_ *){3,}|(?:\\\\* *){3,})(?:\\\\n+|$))').replace('def', '\\\\n+(?=' + block.def.source + ')').getRegex();\n  block._tag = 'address|article|aside|base|basefont|blockquote|body|caption' + '|center|col|colgroup|dd|details|dialog|dir|div|dl|dt|fieldset|figcaption' + '|figure|footer|form|frame|frameset|h[1-6]|head|header|hr|html|iframe' + '|legend|li|link|main|menu|menuitem|meta|nav|noframes|ol|optgroup|option' + '|p|param|section|source|summary|table|tbody|td|tfoot|th|thead|title|tr' + '|track|ul';\n  block._comment = /<!--(?!-?>)[\\s\\S]*?(?:-->|$)/;\n  block.html = edit(block.html, 'i').replace('comment', block._comment).replace('tag', block._tag).replace('attribute', / +[a-zA-Z:_][\\w.:-]*(?: *= *\"[^\"\\n]*\"| *= *'[^'\\n]*'| *= *[^\\s\"'=<>`]+)?/).getRegex();\n  block.paragraph = edit(block._paragraph).replace('hr', block.hr).replace('heading', ' {0,3}#{1,6} ').replace('|lheading', '') // setex headings don't interrupt commonmark paragraphs\n  .replace('blockquote', ' {0,3}>').replace('fences', ' {0,3}(?:`{3,}(?=[^`\\\\n]*\\\\n)|~{3,})[^\\\\n]*\\\\n').replace('list', ' {0,3}(?:[*+-]|1[.)]) ') // only lists starting from 1 can interrupt\n  .replace('html', '</?(?:tag)(?: +|\\\\n|/?>)|<(?:script|pre|style|textarea|!--)').replace('tag', block._tag) // pars can be interrupted by type (6) html blocks\n  .getRegex();\n  block.blockquote = edit(block.blockquote).replace('paragraph', block.paragraph).getRegex();\n  /**\n   * Normal Block Grammar\n   */\n\n  block.normal = merge({}, block);\n  /**\n   * GFM Block Grammar\n   */\n\n  block.gfm = merge({}, block.normal, {\n    table: '^ *([^\\\\n ].*\\\\|.*)\\\\n' // Header\n    + ' {0,3}(?:\\\\| *)?(:?-+:? *(?:\\\\| *:?-+:? *)*)(?:\\\\| *)?' // Align\n    + '(?:\\\\n((?:(?! *\\\\n|hr|heading|blockquote|code|fences|list|html).*(?:\\\\n|$))*)\\\\n*|$)' // Cells\n\n  });\n  block.gfm.table = edit(block.gfm.table).replace('hr', block.hr).replace('heading', ' {0,3}#{1,6} ').replace('blockquote', ' {0,3}>').replace('code', ' {4}[^\\\\n]').replace('fences', ' {0,3}(?:`{3,}(?=[^`\\\\n]*\\\\n)|~{3,})[^\\\\n]*\\\\n').replace('list', ' {0,3}(?:[*+-]|1[.)]) ') // only lists starting from 1 can interrupt\n  .replace('html', '</?(?:tag)(?: +|\\\\n|/?>)|<(?:script|pre|style|textarea|!--)').replace('tag', block._tag) // tables can be interrupted by type (6) html blocks\n  .getRegex();\n  /**\n   * Pedantic grammar (original John Gruber's loose markdown specification)\n   */\n\n  block.pedantic = merge({}, block.normal, {\n    html: edit('^ *(?:comment *(?:\\\\n|\\\\s*$)' + '|<(tag)[\\\\s\\\\S]+?</\\\\1> *(?:\\\\n{2,}|\\\\s*$)' // closed tag\n    + '|<tag(?:\"[^\"]*\"|\\'[^\\']*\\'|\\\\s[^\\'\"/>\\\\s]*)*?/?> *(?:\\\\n{2,}|\\\\s*$))').replace('comment', block._comment).replace(/tag/g, '(?!(?:' + 'a|em|strong|small|s|cite|q|dfn|abbr|data|time|code|var|samp|kbd|sub' + '|sup|i|b|u|mark|ruby|rt|rp|bdi|bdo|span|br|wbr|ins|del|img)' + '\\\\b)\\\\w+(?!:|[^\\\\w\\\\s@]*@)\\\\b').getRegex(),\n    def: /^ *\\[([^\\]]+)\\]: *<?([^\\s>]+)>?(?: +([\"(][^\\n]+[\")]))? *(?:\\n+|$)/,\n    heading: /^(#{1,6})(.*)(?:\\n+|$)/,\n    fences: noopTest,\n    // fences not supported\n    paragraph: edit(block.normal._paragraph).replace('hr', block.hr).replace('heading', ' *#{1,6} *[^\\n]').replace('lheading', block.lheading).replace('blockquote', ' {0,3}>').replace('|fences', '').replace('|list', '').replace('|html', '').getRegex()\n  });\n  /**\n   * Inline-Level Grammar\n   */\n\n  var inline = {\n    escape: /^\\\\([!\"#$%&'()*+,\\-./:;<=>?@\\[\\]\\\\^_`{|}~])/,\n    autolink: /^<(scheme:[^\\s\\x00-\\x1f<>]*|email)>/,\n    url: noopTest,\n    tag: '^comment' + '|^</[a-zA-Z][\\\\w:-]*\\\\s*>' // self-closing tag\n    + '|^<[a-zA-Z][\\\\w-]*(?:attribute)*?\\\\s*/?>' // open tag\n    + '|^<\\\\?[\\\\s\\\\S]*?\\\\?>' // processing instruction, e.g. <?php ?>\n    + '|^<![a-zA-Z]+\\\\s[\\\\s\\\\S]*?>' // declaration, e.g. <!DOCTYPE html>\n    + '|^<!\\\\[CDATA\\\\[[\\\\s\\\\S]*?\\\\]\\\\]>',\n    // CDATA section\n    link: /^!?\\[(label)\\]\\(\\s*(href)(?:\\s+(title))?\\s*\\)/,\n    reflink: /^!?\\[(label)\\]\\[(?!\\s*\\])((?:\\\\[\\[\\]]?|[^\\[\\]\\\\])+)\\]/,\n    nolink: /^!?\\[(?!\\s*\\])((?:\\[[^\\[\\]]*\\]|\\\\[\\[\\]]|[^\\[\\]])*)\\](?:\\[\\])?/,\n    reflinkSearch: 'reflink|nolink(?!\\\\()',\n    emStrong: {\n      lDelim: /^(?:\\*+(?:([punct_])|[^\\s*]))|^_+(?:([punct*])|([^\\s_]))/,\n      //        (1) and (2) can only be a Right Delimiter. (3) and (4) can only be Left.  (5) and (6) can be either Left or Right.\n      //        () Skip orphan delim inside strong    (1) #***                (2) a***#, a***                   (3) #***a, ***a                 (4) ***#              (5) #***#                 (6) a***a\n      rDelimAst: /^[^_*]*?\\_\\_[^_*]*?\\*[^_*]*?(?=\\_\\_)|[punct_](\\*+)(?=[\\s]|$)|[^punct*_\\s](\\*+)(?=[punct_\\s]|$)|[punct_\\s](\\*+)(?=[^punct*_\\s])|[\\s](\\*+)(?=[punct_])|[punct_](\\*+)(?=[punct_])|[^punct*_\\s](\\*+)(?=[^punct*_\\s])/,\n      rDelimUnd: /^[^_*]*?\\*\\*[^_*]*?\\_[^_*]*?(?=\\*\\*)|[punct*](\\_+)(?=[\\s]|$)|[^punct*_\\s](\\_+)(?=[punct*\\s]|$)|[punct*\\s](\\_+)(?=[^punct*_\\s])|[\\s](\\_+)(?=[punct*])|[punct*](\\_+)(?=[punct*])/ // ^- Not allowed for _\n\n    },\n    code: /^(`+)([^`]|[^`][\\s\\S]*?[^`])\\1(?!`)/,\n    br: /^( {2,}|\\\\)\\n(?!\\s*$)/,\n    del: noopTest,\n    text: /^(`+|[^`])(?:(?= {2,}\\n)|[\\s\\S]*?(?:(?=[\\\\<!\\[`*_]|\\b_|$)|[^ ](?= {2,}\\n)))/,\n    punctuation: /^([\\spunctuation])/\n  }; // list of punctuation marks from CommonMark spec\n  // without * and _ to handle the different emphasis markers * and _\n\n  inline._punctuation = '!\"#$%&\\'()+\\\\-.,/:;<=>?@\\\\[\\\\]`^{|}~';\n  inline.punctuation = edit(inline.punctuation).replace(/punctuation/g, inline._punctuation).getRegex(); // sequences em should skip over [title](link), `code`, <html>\n\n  inline.blockSkip = /\\[[^\\]]*?\\]\\([^\\)]*?\\)|`[^`]*?`|<[^>]*?>/g;\n  inline.escapedEmSt = /\\\\\\*|\\\\_/g;\n  inline._comment = edit(block._comment).replace('(?:-->|$)', '-->').getRegex();\n  inline.emStrong.lDelim = edit(inline.emStrong.lDelim).replace(/punct/g, inline._punctuation).getRegex();\n  inline.emStrong.rDelimAst = edit(inline.emStrong.rDelimAst, 'g').replace(/punct/g, inline._punctuation).getRegex();\n  inline.emStrong.rDelimUnd = edit(inline.emStrong.rDelimUnd, 'g').replace(/punct/g, inline._punctuation).getRegex();\n  inline._escapes = /\\\\([!\"#$%&'()*+,\\-./:;<=>?@\\[\\]\\\\^_`{|}~])/g;\n  inline._scheme = /[a-zA-Z][a-zA-Z0-9+.-]{1,31}/;\n  inline._email = /[a-zA-Z0-9.!#$%&'*+/=?^_`{|}~-]+(@)[a-zA-Z0-9](?:[a-zA-Z0-9-]{0,61}[a-zA-Z0-9])?(?:\\.[a-zA-Z0-9](?:[a-zA-Z0-9-]{0,61}[a-zA-Z0-9])?)+(?![-_])/;\n  inline.autolink = edit(inline.autolink).replace('scheme', inline._scheme).replace('email', inline._email).getRegex();\n  inline._attribute = /\\s+[a-zA-Z:_][\\w.:-]*(?:\\s*=\\s*\"[^\"]*\"|\\s*=\\s*'[^']*'|\\s*=\\s*[^\\s\"'=<>`]+)?/;\n  inline.tag = edit(inline.tag).replace('comment', inline._comment).replace('attribute', inline._attribute).getRegex();\n  inline._label = /(?:\\[(?:\\\\.|[^\\[\\]\\\\])*\\]|\\\\.|`[^`]*`|[^\\[\\]\\\\`])*?/;\n  inline._href = /<(?:\\\\.|[^\\n<>\\\\])+>|[^\\s\\x00-\\x1f]*/;\n  inline._title = /\"(?:\\\\\"?|[^\"\\\\])*\"|'(?:\\\\'?|[^'\\\\])*'|\\((?:\\\\\\)?|[^)\\\\])*\\)/;\n  inline.link = edit(inline.link).replace('label', inline._label).replace('href', inline._href).replace('title', inline._title).getRegex();\n  inline.reflink = edit(inline.reflink).replace('label', inline._label).getRegex();\n  inline.reflinkSearch = edit(inline.reflinkSearch, 'g').replace('reflink', inline.reflink).replace('nolink', inline.nolink).getRegex();\n  /**\n   * Normal Inline Grammar\n   */\n\n  inline.normal = merge({}, inline);\n  /**\n   * Pedantic Inline Grammar\n   */\n\n  inline.pedantic = merge({}, inline.normal, {\n    strong: {\n      start: /^__|\\*\\*/,\n      middle: /^__(?=\\S)([\\s\\S]*?\\S)__(?!_)|^\\*\\*(?=\\S)([\\s\\S]*?\\S)\\*\\*(?!\\*)/,\n      endAst: /\\*\\*(?!\\*)/g,\n      endUnd: /__(?!_)/g\n    },\n    em: {\n      start: /^_|\\*/,\n      middle: /^()\\*(?=\\S)([\\s\\S]*?\\S)\\*(?!\\*)|^_(?=\\S)([\\s\\S]*?\\S)_(?!_)/,\n      endAst: /\\*(?!\\*)/g,\n      endUnd: /_(?!_)/g\n    },\n    link: edit(/^!?\\[(label)\\]\\((.*?)\\)/).replace('label', inline._label).getRegex(),\n    reflink: edit(/^!?\\[(label)\\]\\s*\\[([^\\]]*)\\]/).replace('label', inline._label).getRegex()\n  });\n  /**\n   * GFM Inline Grammar\n   */\n\n  inline.gfm = merge({}, inline.normal, {\n    escape: edit(inline.escape).replace('])', '~|])').getRegex(),\n    _extended_email: /[A-Za-z0-9._+-]+(@)[a-zA-Z0-9-_]+(?:\\.[a-zA-Z0-9-_]*[a-zA-Z0-9])+(?![-_])/,\n    url: /^((?:ftp|https?):\\/\\/|www\\.)(?:[a-zA-Z0-9\\-]+\\.?)+[^\\s<]*|^email/,\n    _backpedal: /(?:[^?!.,:;*_~()&]+|\\([^)]*\\)|&(?![a-zA-Z0-9]+;$)|[?!.,:;*_~)]+(?!$))+/,\n    del: /^(~~?)(?=[^\\s~])([\\s\\S]*?[^\\s~])\\1(?=[^~]|$)/,\n    text: /^([`~]+|[^`~])(?:(?= {2,}\\n)|(?=[a-zA-Z0-9.!#$%&'*+\\/=?_`{\\|}~-]+@)|[\\s\\S]*?(?:(?=[\\\\<!\\[`*~_]|\\b_|https?:\\/\\/|ftp:\\/\\/|www\\.|$)|[^ ](?= {2,}\\n)|[^a-zA-Z0-9.!#$%&'*+\\/=?_`{\\|}~-](?=[a-zA-Z0-9.!#$%&'*+\\/=?_`{\\|}~-]+@)))/\n  });\n  inline.gfm.url = edit(inline.gfm.url, 'i').replace('email', inline.gfm._extended_email).getRegex();\n  /**\n   * GFM + Line Breaks Inline Grammar\n   */\n\n  inline.breaks = merge({}, inline.gfm, {\n    br: edit(inline.br).replace('{2,}', '*').getRegex(),\n    text: edit(inline.gfm.text).replace('\\\\b_', '\\\\b_| {2,}\\\\n').replace(/\\{2,\\}/g, '*').getRegex()\n  });\n\n  /**\n   * smartypants text replacement\n   */\n\n  function smartypants(text) {\n    return text // em-dashes\n    .replace(/---/g, \"\\u2014\") // en-dashes\n    .replace(/--/g, \"\\u2013\") // opening singles\n    .replace(/(^|[-\\u2014/(\\[{\"\\s])'/g, \"$1\\u2018\") // closing singles & apostrophes\n    .replace(/'/g, \"\\u2019\") // opening doubles\n    .replace(/(^|[-\\u2014/(\\[{\\u2018\\s])\"/g, \"$1\\u201C\") // closing doubles\n    .replace(/\"/g, \"\\u201D\") // ellipses\n    .replace(/\\.{3}/g, \"\\u2026\");\n  }\n  /**\n   * mangle email addresses\n   */\n\n\n  function mangle(text) {\n    var out = '',\n        i,\n        ch;\n    var l = text.length;\n\n    for (i = 0; i < l; i++) {\n      ch = text.charCodeAt(i);\n\n      if (Math.random() > 0.5) {\n        ch = 'x' + ch.toString(16);\n      }\n\n      out += '&#' + ch + ';';\n    }\n\n    return out;\n  }\n  /**\n   * Block Lexer\n   */\n\n\n  var Lexer = /*#__PURE__*/function () {\n    function Lexer(options) {\n      this.tokens = [];\n      this.tokens.links = Object.create(null);\n      this.options = options || exports.defaults;\n      this.options.tokenizer = this.options.tokenizer || new Tokenizer();\n      this.tokenizer = this.options.tokenizer;\n      this.tokenizer.options = this.options;\n      this.tokenizer.lexer = this;\n      this.inlineQueue = [];\n      this.state = {\n        inLink: false,\n        inRawBlock: false,\n        top: true\n      };\n      var rules = {\n        block: block.normal,\n        inline: inline.normal\n      };\n\n      if (this.options.pedantic) {\n        rules.block = block.pedantic;\n        rules.inline = inline.pedantic;\n      } else if (this.options.gfm) {\n        rules.block = block.gfm;\n\n        if (this.options.breaks) {\n          rules.inline = inline.breaks;\n        } else {\n          rules.inline = inline.gfm;\n        }\n      }\n\n      this.tokenizer.rules = rules;\n    }\n    /**\n     * Expose Rules\n     */\n\n\n    /**\n     * Static Lex Method\n     */\n    Lexer.lex = function lex(src, options) {\n      var lexer = new Lexer(options);\n      return lexer.lex(src);\n    }\n    /**\n     * Static Lex Inline Method\n     */\n    ;\n\n    Lexer.lexInline = function lexInline(src, options) {\n      var lexer = new Lexer(options);\n      return lexer.inlineTokens(src);\n    }\n    /**\n     * Preprocessing\n     */\n    ;\n\n    var _proto = Lexer.prototype;\n\n    _proto.lex = function lex(src) {\n      src = src.replace(/\\r\\n|\\r/g, '\\n').replace(/\\t/g, '    ');\n      this.blockTokens(src, this.tokens);\n      var next;\n\n      while (next = this.inlineQueue.shift()) {\n        this.inlineTokens(next.src, next.tokens);\n      }\n\n      return this.tokens;\n    }\n    /**\n     * Lexing\n     */\n    ;\n\n    _proto.blockTokens = function blockTokens(src, tokens) {\n      var _this = this;\n\n      if (tokens === void 0) {\n        tokens = [];\n      }\n\n      if (this.options.pedantic) {\n        src = src.replace(/^ +$/gm, '');\n      }\n\n      var token, lastToken, cutSrc, lastParagraphClipped;\n\n      while (src) {\n        if (this.options.extensions && this.options.extensions.block && this.options.extensions.block.some(function (extTokenizer) {\n          if (token = extTokenizer.call({\n            lexer: _this\n          }, src, tokens)) {\n            src = src.substring(token.raw.length);\n            tokens.push(token);\n            return true;\n          }\n\n          return false;\n        })) {\n          continue;\n        } // newline\n\n\n        if (token = this.tokenizer.space(src)) {\n          src = src.substring(token.raw.length);\n\n          if (token.type) {\n            tokens.push(token);\n          }\n\n          continue;\n        } // code\n\n\n        if (token = this.tokenizer.code(src)) {\n          src = src.substring(token.raw.length);\n          lastToken = tokens[tokens.length - 1]; // An indented code block cannot interrupt a paragraph.\n\n          if (lastToken && (lastToken.type === 'paragraph' || lastToken.type === 'text')) {\n            lastToken.raw += '\\n' + token.raw;\n            lastToken.text += '\\n' + token.text;\n            this.inlineQueue[this.inlineQueue.length - 1].src = lastToken.text;\n          } else {\n            tokens.push(token);\n          }\n\n          continue;\n        } // fences\n\n\n        if (token = this.tokenizer.fences(src)) {\n          src = src.substring(token.raw.length);\n          tokens.push(token);\n          continue;\n        } // heading\n\n\n        if (token = this.tokenizer.heading(src)) {\n          src = src.substring(token.raw.length);\n          tokens.push(token);\n          continue;\n        } // hr\n\n\n        if (token = this.tokenizer.hr(src)) {\n          src = src.substring(token.raw.length);\n          tokens.push(token);\n          continue;\n        } // blockquote\n\n\n        if (token = this.tokenizer.blockquote(src)) {\n          src = src.substring(token.raw.length);\n          tokens.push(token);\n          continue;\n        } // list\n\n\n        if (token = this.tokenizer.list(src)) {\n          src = src.substring(token.raw.length);\n          tokens.push(token);\n          continue;\n        } // html\n\n\n        if (token = this.tokenizer.html(src)) {\n          src = src.substring(token.raw.length);\n          tokens.push(token);\n          continue;\n        } // def\n\n\n        if (token = this.tokenizer.def(src)) {\n          src = src.substring(token.raw.length);\n          lastToken = tokens[tokens.length - 1];\n\n          if (lastToken && (lastToken.type === 'paragraph' || lastToken.type === 'text')) {\n            lastToken.raw += '\\n' + token.raw;\n            lastToken.text += '\\n' + token.raw;\n            this.inlineQueue[this.inlineQueue.length - 1].src = lastToken.text;\n          } else if (!this.tokens.links[token.tag]) {\n            this.tokens.links[token.tag] = {\n              href: token.href,\n              title: token.title\n            };\n          }\n\n          continue;\n        } // table (gfm)\n\n\n        if (token = this.tokenizer.table(src)) {\n          src = src.substring(token.raw.length);\n          tokens.push(token);\n          continue;\n        } // lheading\n\n\n        if (token = this.tokenizer.lheading(src)) {\n          src = src.substring(token.raw.length);\n          tokens.push(token);\n          continue;\n        } // top-level paragraph\n        // prevent paragraph consuming extensions by clipping 'src' to extension start\n\n\n        cutSrc = src;\n\n        if (this.options.extensions && this.options.extensions.startBlock) {\n          (function () {\n            var startIndex = Infinity;\n            var tempSrc = src.slice(1);\n            var tempStart = void 0;\n\n            _this.options.extensions.startBlock.forEach(function (getStartIndex) {\n              tempStart = getStartIndex.call({\n                lexer: this\n              }, tempSrc);\n\n              if (typeof tempStart === 'number' && tempStart >= 0) {\n                startIndex = Math.min(startIndex, tempStart);\n              }\n            });\n\n            if (startIndex < Infinity && startIndex >= 0) {\n              cutSrc = src.substring(0, startIndex + 1);\n            }\n          })();\n        }\n\n        if (this.state.top && (token = this.tokenizer.paragraph(cutSrc))) {\n          lastToken = tokens[tokens.length - 1];\n\n          if (lastParagraphClipped && lastToken.type === 'paragraph') {\n            lastToken.raw += '\\n' + token.raw;\n            lastToken.text += '\\n' + token.text;\n            this.inlineQueue.pop();\n            this.inlineQueue[this.inlineQueue.length - 1].src = lastToken.text;\n          } else {\n            tokens.push(token);\n          }\n\n          lastParagraphClipped = cutSrc.length !== src.length;\n          src = src.substring(token.raw.length);\n          continue;\n        } // text\n\n\n        if (token = this.tokenizer.text(src)) {\n          src = src.substring(token.raw.length);\n          lastToken = tokens[tokens.length - 1];\n\n          if (lastToken && lastToken.type === 'text') {\n            lastToken.raw += '\\n' + token.raw;\n            lastToken.text += '\\n' + token.text;\n            this.inlineQueue.pop();\n            this.inlineQueue[this.inlineQueue.length - 1].src = lastToken.text;\n          } else {\n            tokens.push(token);\n          }\n\n          continue;\n        }\n\n        if (src) {\n          var errMsg = 'Infinite loop on byte: ' + src.charCodeAt(0);\n\n          if (this.options.silent) {\n            console.error(errMsg);\n            break;\n          } else {\n            throw new Error(errMsg);\n          }\n        }\n      }\n\n      this.state.top = true;\n      return tokens;\n    };\n\n    _proto.inline = function inline(src, tokens) {\n      this.inlineQueue.push({\n        src: src,\n        tokens: tokens\n      });\n    }\n    /**\n     * Lexing/Compiling\n     */\n    ;\n\n    _proto.inlineTokens = function inlineTokens(src, tokens) {\n      var _this2 = this;\n\n      if (tokens === void 0) {\n        tokens = [];\n      }\n\n      var token, lastToken, cutSrc; // String with links masked to avoid interference with em and strong\n\n      var maskedSrc = src;\n      var match;\n      var keepPrevChar, prevChar; // Mask out reflinks\n\n      if (this.tokens.links) {\n        var links = Object.keys(this.tokens.links);\n\n        if (links.length > 0) {\n          while ((match = this.tokenizer.rules.inline.reflinkSearch.exec(maskedSrc)) != null) {\n            if (links.includes(match[0].slice(match[0].lastIndexOf('[') + 1, -1))) {\n              maskedSrc = maskedSrc.slice(0, match.index) + '[' + repeatString('a', match[0].length - 2) + ']' + maskedSrc.slice(this.tokenizer.rules.inline.reflinkSearch.lastIndex);\n            }\n          }\n        }\n      } // Mask out other blocks\n\n\n      while ((match = this.tokenizer.rules.inline.blockSkip.exec(maskedSrc)) != null) {\n        maskedSrc = maskedSrc.slice(0, match.index) + '[' + repeatString('a', match[0].length - 2) + ']' + maskedSrc.slice(this.tokenizer.rules.inline.blockSkip.lastIndex);\n      } // Mask out escaped em & strong delimiters\n\n\n      while ((match = this.tokenizer.rules.inline.escapedEmSt.exec(maskedSrc)) != null) {\n        maskedSrc = maskedSrc.slice(0, match.index) + '++' + maskedSrc.slice(this.tokenizer.rules.inline.escapedEmSt.lastIndex);\n      }\n\n      while (src) {\n        if (!keepPrevChar) {\n          prevChar = '';\n        }\n\n        keepPrevChar = false; // extensions\n\n        if (this.options.extensions && this.options.extensions.inline && this.options.extensions.inline.some(function (extTokenizer) {\n          if (token = extTokenizer.call({\n            lexer: _this2\n          }, src, tokens)) {\n            src = src.substring(token.raw.length);\n            tokens.push(token);\n            return true;\n          }\n\n          return false;\n        })) {\n          continue;\n        } // escape\n\n\n        if (token = this.tokenizer.escape(src)) {\n          src = src.substring(token.raw.length);\n          tokens.push(token);\n          continue;\n        } // tag\n\n\n        if (token = this.tokenizer.tag(src)) {\n          src = src.substring(token.raw.length);\n          lastToken = tokens[tokens.length - 1];\n\n          if (lastToken && token.type === 'text' && lastToken.type === 'text') {\n            lastToken.raw += token.raw;\n            lastToken.text += token.text;\n          } else {\n            tokens.push(token);\n          }\n\n          continue;\n        } // link\n\n\n        if (token = this.tokenizer.link(src)) {\n          src = src.substring(token.raw.length);\n          tokens.push(token);\n          continue;\n        } // reflink, nolink\n\n\n        if (token = this.tokenizer.reflink(src, this.tokens.links)) {\n          src = src.substring(token.raw.length);\n          lastToken = tokens[tokens.length - 1];\n\n          if (lastToken && token.type === 'text' && lastToken.type === 'text') {\n            lastToken.raw += token.raw;\n            lastToken.text += token.text;\n          } else {\n            tokens.push(token);\n          }\n\n          continue;\n        } // em & strong\n\n\n        if (token = this.tokenizer.emStrong(src, maskedSrc, prevChar)) {\n          src = src.substring(token.raw.length);\n          tokens.push(token);\n          continue;\n        } // code\n\n\n        if (token = this.tokenizer.codespan(src)) {\n          src = src.substring(token.raw.length);\n          tokens.push(token);\n          continue;\n        } // br\n\n\n        if (token = this.tokenizer.br(src)) {\n          src = src.substring(token.raw.length);\n          tokens.push(token);\n          continue;\n        } // del (gfm)\n\n\n        if (token = this.tokenizer.del(src)) {\n          src = src.substring(token.raw.length);\n          tokens.push(token);\n          continue;\n        } // autolink\n\n\n        if (token = this.tokenizer.autolink(src, mangle)) {\n          src = src.substring(token.raw.length);\n          tokens.push(token);\n          continue;\n        } // url (gfm)\n\n\n        if (!this.state.inLink && (token = this.tokenizer.url(src, mangle))) {\n          src = src.substring(token.raw.length);\n          tokens.push(token);\n          continue;\n        } // text\n        // prevent inlineText consuming extensions by clipping 'src' to extension start\n\n\n        cutSrc = src;\n\n        if (this.options.extensions && this.options.extensions.startInline) {\n          (function () {\n            var startIndex = Infinity;\n            var tempSrc = src.slice(1);\n            var tempStart = void 0;\n\n            _this2.options.extensions.startInline.forEach(function (getStartIndex) {\n              tempStart = getStartIndex.call({\n                lexer: this\n              }, tempSrc);\n\n              if (typeof tempStart === 'number' && tempStart >= 0) {\n                startIndex = Math.min(startIndex, tempStart);\n              }\n            });\n\n            if (startIndex < Infinity && startIndex >= 0) {\n              cutSrc = src.substring(0, startIndex + 1);\n            }\n          })();\n        }\n\n        if (token = this.tokenizer.inlineText(cutSrc, smartypants)) {\n          src = src.substring(token.raw.length);\n\n          if (token.raw.slice(-1) !== '_') {\n            // Track prevChar before string of ____ started\n            prevChar = token.raw.slice(-1);\n          }\n\n          keepPrevChar = true;\n          lastToken = tokens[tokens.length - 1];\n\n          if (lastToken && lastToken.type === 'text') {\n            lastToken.raw += token.raw;\n            lastToken.text += token.text;\n          } else {\n            tokens.push(token);\n          }\n\n          continue;\n        }\n\n        if (src) {\n          var errMsg = 'Infinite loop on byte: ' + src.charCodeAt(0);\n\n          if (this.options.silent) {\n            console.error(errMsg);\n            break;\n          } else {\n            throw new Error(errMsg);\n          }\n        }\n      }\n\n      return tokens;\n    };\n\n    _createClass(Lexer, null, [{\n      key: \"rules\",\n      get: function get() {\n        return {\n          block: block,\n          inline: inline\n        };\n      }\n    }]);\n\n    return Lexer;\n  }();\n\n  /**\n   * Renderer\n   */\n\n  var Renderer = /*#__PURE__*/function () {\n    function Renderer(options) {\n      this.options = options || exports.defaults;\n    }\n\n    var _proto = Renderer.prototype;\n\n    _proto.code = function code(_code, infostring, escaped) {\n      var lang = (infostring || '').match(/\\S*/)[0];\n\n      if (this.options.highlight) {\n        var out = this.options.highlight(_code, lang);\n\n        if (out != null && out !== _code) {\n          escaped = true;\n          _code = out;\n        }\n      }\n\n      _code = _code.replace(/\\n$/, '') + '\\n';\n\n      if (!lang) {\n        return '<pre><code>' + (escaped ? _code : escape(_code, true)) + '</code></pre>\\n';\n      }\n\n      return '<pre><code class=\"' + this.options.langPrefix + escape(lang, true) + '\">' + (escaped ? _code : escape(_code, true)) + '</code></pre>\\n';\n    };\n\n    _proto.blockquote = function blockquote(quote) {\n      return '<blockquote>\\n' + quote + '</blockquote>\\n';\n    };\n\n    _proto.html = function html(_html) {\n      return _html;\n    };\n\n    _proto.heading = function heading(text, level, raw, slugger) {\n      if (this.options.headerIds) {\n        return '<h' + level + ' id=\"' + this.options.headerPrefix + slugger.slug(raw) + '\">' + text + '</h' + level + '>\\n';\n      } // ignore IDs\n\n\n      return '<h' + level + '>' + text + '</h' + level + '>\\n';\n    };\n\n    _proto.hr = function hr() {\n      return this.options.xhtml ? '<hr/>\\n' : '<hr>\\n';\n    };\n\n    _proto.list = function list(body, ordered, start) {\n      var type = ordered ? 'ol' : 'ul',\n          startatt = ordered && start !== 1 ? ' start=\"' + start + '\"' : '';\n      return '<' + type + startatt + '>\\n' + body + '</' + type + '>\\n';\n    };\n\n    _proto.listitem = function listitem(text) {\n      return '<li>' + text + '</li>\\n';\n    };\n\n    _proto.checkbox = function checkbox(checked) {\n      return '<input ' + (checked ? 'checked=\"\" ' : '') + 'disabled=\"\" type=\"checkbox\"' + (this.options.xhtml ? ' /' : '') + '> ';\n    };\n\n    _proto.paragraph = function paragraph(text) {\n      return '<p>' + text + '</p>\\n';\n    };\n\n    _proto.table = function table(header, body) {\n      if (body) body = '<tbody>' + body + '</tbody>';\n      return '<table>\\n' + '<thead>\\n' + header + '</thead>\\n' + body + '</table>\\n';\n    };\n\n    _proto.tablerow = function tablerow(content) {\n      return '<tr>\\n' + content + '</tr>\\n';\n    };\n\n    _proto.tablecell = function tablecell(content, flags) {\n      var type = flags.header ? 'th' : 'td';\n      var tag = flags.align ? '<' + type + ' align=\"' + flags.align + '\">' : '<' + type + '>';\n      return tag + content + '</' + type + '>\\n';\n    } // span level renderer\n    ;\n\n    _proto.strong = function strong(text) {\n      return '<strong>' + text + '</strong>';\n    };\n\n    _proto.em = function em(text) {\n      return '<em>' + text + '</em>';\n    };\n\n    _proto.codespan = function codespan(text) {\n      return '<code>' + text + '</code>';\n    };\n\n    _proto.br = function br() {\n      return this.options.xhtml ? '<br/>' : '<br>';\n    };\n\n    _proto.del = function del(text) {\n      return '<del>' + text + '</del>';\n    };\n\n    _proto.link = function link(href, title, text) {\n      href = cleanUrl(this.options.sanitize, this.options.baseUrl, href);\n\n      if (href === null) {\n        return text;\n      }\n\n      var out = '<a href=\"' + escape(href) + '\"';\n\n      if (title) {\n        out += ' title=\"' + title + '\"';\n      }\n\n      out += '>' + text + '</a>';\n      return out;\n    };\n\n    _proto.image = function image(href, title, text) {\n      href = cleanUrl(this.options.sanitize, this.options.baseUrl, href);\n\n      if (href === null) {\n        return text;\n      }\n\n      var out = '<img src=\"' + href + '\" alt=\"' + text + '\"';\n\n      if (title) {\n        out += ' title=\"' + title + '\"';\n      }\n\n      out += this.options.xhtml ? '/>' : '>';\n      return out;\n    };\n\n    _proto.text = function text(_text) {\n      return _text;\n    };\n\n    return Renderer;\n  }();\n\n  /**\n   * TextRenderer\n   * returns only the textual part of the token\n   */\n  var TextRenderer = /*#__PURE__*/function () {\n    function TextRenderer() {}\n\n    var _proto = TextRenderer.prototype;\n\n    // no need for block level renderers\n    _proto.strong = function strong(text) {\n      return text;\n    };\n\n    _proto.em = function em(text) {\n      return text;\n    };\n\n    _proto.codespan = function codespan(text) {\n      return text;\n    };\n\n    _proto.del = function del(text) {\n      return text;\n    };\n\n    _proto.html = function html(text) {\n      return text;\n    };\n\n    _proto.text = function text(_text) {\n      return _text;\n    };\n\n    _proto.link = function link(href, title, text) {\n      return '' + text;\n    };\n\n    _proto.image = function image(href, title, text) {\n      return '' + text;\n    };\n\n    _proto.br = function br() {\n      return '';\n    };\n\n    return TextRenderer;\n  }();\n\n  /**\n   * Slugger generates header id\n   */\n  var Slugger = /*#__PURE__*/function () {\n    function Slugger() {\n      this.seen = {};\n    }\n\n    var _proto = Slugger.prototype;\n\n    _proto.serialize = function serialize(value) {\n      return value.toLowerCase().trim() // remove html tags\n      .replace(/<[!\\/a-z].*?>/ig, '') // remove unwanted chars\n      .replace(/[\\u2000-\\u206F\\u2E00-\\u2E7F\\\\'!\"#$%&()*+,./:;<=>?@[\\]^`{|}~]/g, '').replace(/\\s/g, '-');\n    }\n    /**\n     * Finds the next safe (unique) slug to use\n     */\n    ;\n\n    _proto.getNextSafeSlug = function getNextSafeSlug(originalSlug, isDryRun) {\n      var slug = originalSlug;\n      var occurenceAccumulator = 0;\n\n      if (this.seen.hasOwnProperty(slug)) {\n        occurenceAccumulator = this.seen[originalSlug];\n\n        do {\n          occurenceAccumulator++;\n          slug = originalSlug + '-' + occurenceAccumulator;\n        } while (this.seen.hasOwnProperty(slug));\n      }\n\n      if (!isDryRun) {\n        this.seen[originalSlug] = occurenceAccumulator;\n        this.seen[slug] = 0;\n      }\n\n      return slug;\n    }\n    /**\n     * Convert string to unique id\n     * @param {object} options\n     * @param {boolean} options.dryrun Generates the next unique slug without updating the internal accumulator.\n     */\n    ;\n\n    _proto.slug = function slug(value, options) {\n      if (options === void 0) {\n        options = {};\n      }\n\n      var slug = this.serialize(value);\n      return this.getNextSafeSlug(slug, options.dryrun);\n    };\n\n    return Slugger;\n  }();\n\n  /**\n   * Parsing & Compiling\n   */\n\n  var Parser = /*#__PURE__*/function () {\n    function Parser(options) {\n      this.options = options || exports.defaults;\n      this.options.renderer = this.options.renderer || new Renderer();\n      this.renderer = this.options.renderer;\n      this.renderer.options = this.options;\n      this.textRenderer = new TextRenderer();\n      this.slugger = new Slugger();\n    }\n    /**\n     * Static Parse Method\n     */\n\n\n    Parser.parse = function parse(tokens, options) {\n      var parser = new Parser(options);\n      return parser.parse(tokens);\n    }\n    /**\n     * Static Parse Inline Method\n     */\n    ;\n\n    Parser.parseInline = function parseInline(tokens, options) {\n      var parser = new Parser(options);\n      return parser.parseInline(tokens);\n    }\n    /**\n     * Parse Loop\n     */\n    ;\n\n    var _proto = Parser.prototype;\n\n    _proto.parse = function parse(tokens, top) {\n      if (top === void 0) {\n        top = true;\n      }\n\n      var out = '',\n          i,\n          j,\n          k,\n          l2,\n          l3,\n          row,\n          cell,\n          header,\n          body,\n          token,\n          ordered,\n          start,\n          loose,\n          itemBody,\n          item,\n          checked,\n          task,\n          checkbox,\n          ret;\n      var l = tokens.length;\n\n      for (i = 0; i < l; i++) {\n        token = tokens[i]; // Run any renderer extensions\n\n        if (this.options.extensions && this.options.extensions.renderers && this.options.extensions.renderers[token.type]) {\n          ret = this.options.extensions.renderers[token.type].call({\n            parser: this\n          }, token);\n\n          if (ret !== false || !['space', 'hr', 'heading', 'code', 'table', 'blockquote', 'list', 'html', 'paragraph', 'text'].includes(token.type)) {\n            out += ret || '';\n            continue;\n          }\n        }\n\n        switch (token.type) {\n          case 'space':\n            {\n              continue;\n            }\n\n          case 'hr':\n            {\n              out += this.renderer.hr();\n              continue;\n            }\n\n          case 'heading':\n            {\n              out += this.renderer.heading(this.parseInline(token.tokens), token.depth, unescape(this.parseInline(token.tokens, this.textRenderer)), this.slugger);\n              continue;\n            }\n\n          case 'code':\n            {\n              out += this.renderer.code(token.text, token.lang, token.escaped);\n              continue;\n            }\n\n          case 'table':\n            {\n              header = ''; // header\n\n              cell = '';\n              l2 = token.header.length;\n\n              for (j = 0; j < l2; j++) {\n                cell += this.renderer.tablecell(this.parseInline(token.header[j].tokens), {\n                  header: true,\n                  align: token.align[j]\n                });\n              }\n\n              header += this.renderer.tablerow(cell);\n              body = '';\n              l2 = token.rows.length;\n\n              for (j = 0; j < l2; j++) {\n                row = token.rows[j];\n                cell = '';\n                l3 = row.length;\n\n                for (k = 0; k < l3; k++) {\n                  cell += this.renderer.tablecell(this.parseInline(row[k].tokens), {\n                    header: false,\n                    align: token.align[k]\n                  });\n                }\n\n                body += this.renderer.tablerow(cell);\n              }\n\n              out += this.renderer.table(header, body);\n              continue;\n            }\n\n          case 'blockquote':\n            {\n              body = this.parse(token.tokens);\n              out += this.renderer.blockquote(body);\n              continue;\n            }\n\n          case 'list':\n            {\n              ordered = token.ordered;\n              start = token.start;\n              loose = token.loose;\n              l2 = token.items.length;\n              body = '';\n\n              for (j = 0; j < l2; j++) {\n                item = token.items[j];\n                checked = item.checked;\n                task = item.task;\n                itemBody = '';\n\n                if (item.task) {\n                  checkbox = this.renderer.checkbox(checked);\n\n                  if (loose) {\n                    if (item.tokens.length > 0 && item.tokens[0].type === 'paragraph') {\n                      item.tokens[0].text = checkbox + ' ' + item.tokens[0].text;\n\n                      if (item.tokens[0].tokens && item.tokens[0].tokens.length > 0 && item.tokens[0].tokens[0].type === 'text') {\n                        item.tokens[0].tokens[0].text = checkbox + ' ' + item.tokens[0].tokens[0].text;\n                      }\n                    } else {\n                      item.tokens.unshift({\n                        type: 'text',\n                        text: checkbox\n                      });\n                    }\n                  } else {\n                    itemBody += checkbox;\n                  }\n                }\n\n                itemBody += this.parse(item.tokens, loose);\n                body += this.renderer.listitem(itemBody, task, checked);\n              }\n\n              out += this.renderer.list(body, ordered, start);\n              continue;\n            }\n\n          case 'html':\n            {\n              // TODO parse inline content if parameter markdown=1\n              out += this.renderer.html(token.text);\n              continue;\n            }\n\n          case 'paragraph':\n            {\n              out += this.renderer.paragraph(this.parseInline(token.tokens));\n              continue;\n            }\n\n          case 'text':\n            {\n              body = token.tokens ? this.parseInline(token.tokens) : token.text;\n\n              while (i + 1 < l && tokens[i + 1].type === 'text') {\n                token = tokens[++i];\n                body += '\\n' + (token.tokens ? this.parseInline(token.tokens) : token.text);\n              }\n\n              out += top ? this.renderer.paragraph(body) : body;\n              continue;\n            }\n\n          default:\n            {\n              var errMsg = 'Token with \"' + token.type + '\" type was not found.';\n\n              if (this.options.silent) {\n                console.error(errMsg);\n                return;\n              } else {\n                throw new Error(errMsg);\n              }\n            }\n        }\n      }\n\n      return out;\n    }\n    /**\n     * Parse Inline Tokens\n     */\n    ;\n\n    _proto.parseInline = function parseInline(tokens, renderer) {\n      renderer = renderer || this.renderer;\n      var out = '',\n          i,\n          token,\n          ret;\n      var l = tokens.length;\n\n      for (i = 0; i < l; i++) {\n        token = tokens[i]; // Run any renderer extensions\n\n        if (this.options.extensions && this.options.extensions.renderers && this.options.extensions.renderers[token.type]) {\n          ret = this.options.extensions.renderers[token.type].call({\n            parser: this\n          }, token);\n\n          if (ret !== false || !['escape', 'html', 'link', 'image', 'strong', 'em', 'codespan', 'br', 'del', 'text'].includes(token.type)) {\n            out += ret || '';\n            continue;\n          }\n        }\n\n        switch (token.type) {\n          case 'escape':\n            {\n              out += renderer.text(token.text);\n              break;\n            }\n\n          case 'html':\n            {\n              out += renderer.html(token.text);\n              break;\n            }\n\n          case 'link':\n            {\n              out += renderer.link(token.href, token.title, this.parseInline(token.tokens, renderer));\n              break;\n            }\n\n          case 'image':\n            {\n              out += renderer.image(token.href, token.title, token.text);\n              break;\n            }\n\n          case 'strong':\n            {\n              out += renderer.strong(this.parseInline(token.tokens, renderer));\n              break;\n            }\n\n          case 'em':\n            {\n              out += renderer.em(this.parseInline(token.tokens, renderer));\n              break;\n            }\n\n          case 'codespan':\n            {\n              out += renderer.codespan(token.text);\n              break;\n            }\n\n          case 'br':\n            {\n              out += renderer.br();\n              break;\n            }\n\n          case 'del':\n            {\n              out += renderer.del(this.parseInline(token.tokens, renderer));\n              break;\n            }\n\n          case 'text':\n            {\n              out += renderer.text(token.text);\n              break;\n            }\n\n          default:\n            {\n              var errMsg = 'Token with \"' + token.type + '\" type was not found.';\n\n              if (this.options.silent) {\n                console.error(errMsg);\n                return;\n              } else {\n                throw new Error(errMsg);\n              }\n            }\n        }\n      }\n\n      return out;\n    };\n\n    return Parser;\n  }();\n\n  /**\n   * Marked\n   */\n\n  function marked(src, opt, callback) {\n    // throw error in case of non string input\n    if (typeof src === 'undefined' || src === null) {\n      throw new Error('marked(): input parameter is undefined or null');\n    }\n\n    if (typeof src !== 'string') {\n      throw new Error('marked(): input parameter is of type ' + Object.prototype.toString.call(src) + ', string expected');\n    }\n\n    if (typeof opt === 'function') {\n      callback = opt;\n      opt = null;\n    }\n\n    opt = merge({}, marked.defaults, opt || {});\n    checkSanitizeDeprecation(opt);\n\n    if (callback) {\n      var highlight = opt.highlight;\n      var tokens;\n\n      try {\n        tokens = Lexer.lex(src, opt);\n      } catch (e) {\n        return callback(e);\n      }\n\n      var done = function done(err) {\n        var out;\n\n        if (!err) {\n          try {\n            if (opt.walkTokens) {\n              marked.walkTokens(tokens, opt.walkTokens);\n            }\n\n            out = Parser.parse(tokens, opt);\n          } catch (e) {\n            err = e;\n          }\n        }\n\n        opt.highlight = highlight;\n        return err ? callback(err) : callback(null, out);\n      };\n\n      if (!highlight || highlight.length < 3) {\n        return done();\n      }\n\n      delete opt.highlight;\n      if (!tokens.length) return done();\n      var pending = 0;\n      marked.walkTokens(tokens, function (token) {\n        if (token.type === 'code') {\n          pending++;\n          setTimeout(function () {\n            highlight(token.text, token.lang, function (err, code) {\n              if (err) {\n                return done(err);\n              }\n\n              if (code != null && code !== token.text) {\n                token.text = code;\n                token.escaped = true;\n              }\n\n              pending--;\n\n              if (pending === 0) {\n                done();\n              }\n            });\n          }, 0);\n        }\n      });\n\n      if (pending === 0) {\n        done();\n      }\n\n      return;\n    }\n\n    try {\n      var _tokens = Lexer.lex(src, opt);\n\n      if (opt.walkTokens) {\n        marked.walkTokens(_tokens, opt.walkTokens);\n      }\n\n      return Parser.parse(_tokens, opt);\n    } catch (e) {\n      e.message += '\\nPlease report this to https://github.com/markedjs/marked.';\n\n      if (opt.silent) {\n        return '<p>An error occurred:</p><pre>' + escape(e.message + '', true) + '</pre>';\n      }\n\n      throw e;\n    }\n  }\n  /**\n   * Options\n   */\n\n  marked.options = marked.setOptions = function (opt) {\n    merge(marked.defaults, opt);\n    changeDefaults(marked.defaults);\n    return marked;\n  };\n\n  marked.getDefaults = getDefaults;\n  marked.defaults = exports.defaults;\n  /**\n   * Use Extension\n   */\n\n  marked.use = function () {\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    var opts = merge.apply(void 0, [{}].concat(args));\n    var extensions = marked.defaults.extensions || {\n      renderers: {},\n      childTokens: {}\n    };\n    var hasExtensions;\n    args.forEach(function (pack) {\n      // ==-- Parse \"addon\" extensions --== //\n      if (pack.extensions) {\n        hasExtensions = true;\n        pack.extensions.forEach(function (ext) {\n          if (!ext.name) {\n            throw new Error('extension name required');\n          }\n\n          if (ext.renderer) {\n            // Renderer extensions\n            var prevRenderer = extensions.renderers ? extensions.renderers[ext.name] : null;\n\n            if (prevRenderer) {\n              // Replace extension with func to run new extension but fall back if false\n              extensions.renderers[ext.name] = function () {\n                for (var _len2 = arguments.length, args = new Array(_len2), _key2 = 0; _key2 < _len2; _key2++) {\n                  args[_key2] = arguments[_key2];\n                }\n\n                var ret = ext.renderer.apply(this, args);\n\n                if (ret === false) {\n                  ret = prevRenderer.apply(this, args);\n                }\n\n                return ret;\n              };\n            } else {\n              extensions.renderers[ext.name] = ext.renderer;\n            }\n          }\n\n          if (ext.tokenizer) {\n            // Tokenizer Extensions\n            if (!ext.level || ext.level !== 'block' && ext.level !== 'inline') {\n              throw new Error(\"extension level must be 'block' or 'inline'\");\n            }\n\n            if (extensions[ext.level]) {\n              extensions[ext.level].unshift(ext.tokenizer);\n            } else {\n              extensions[ext.level] = [ext.tokenizer];\n            }\n\n            if (ext.start) {\n              // Function to check for start of token\n              if (ext.level === 'block') {\n                if (extensions.startBlock) {\n                  extensions.startBlock.push(ext.start);\n                } else {\n                  extensions.startBlock = [ext.start];\n                }\n              } else if (ext.level === 'inline') {\n                if (extensions.startInline) {\n                  extensions.startInline.push(ext.start);\n                } else {\n                  extensions.startInline = [ext.start];\n                }\n              }\n            }\n          }\n\n          if (ext.childTokens) {\n            // Child tokens to be visited by walkTokens\n            extensions.childTokens[ext.name] = ext.childTokens;\n          }\n        });\n      } // ==-- Parse \"overwrite\" extensions --== //\n\n\n      if (pack.renderer) {\n        (function () {\n          var renderer = marked.defaults.renderer || new Renderer();\n\n          var _loop = function _loop(prop) {\n            var prevRenderer = renderer[prop]; // Replace renderer with func to run extension, but fall back if false\n\n            renderer[prop] = function () {\n              for (var _len3 = arguments.length, args = new Array(_len3), _key3 = 0; _key3 < _len3; _key3++) {\n                args[_key3] = arguments[_key3];\n              }\n\n              var ret = pack.renderer[prop].apply(renderer, args);\n\n              if (ret === false) {\n                ret = prevRenderer.apply(renderer, args);\n              }\n\n              return ret;\n            };\n          };\n\n          for (var prop in pack.renderer) {\n            _loop(prop);\n          }\n\n          opts.renderer = renderer;\n        })();\n      }\n\n      if (pack.tokenizer) {\n        (function () {\n          var tokenizer = marked.defaults.tokenizer || new Tokenizer();\n\n          var _loop2 = function _loop2(prop) {\n            var prevTokenizer = tokenizer[prop]; // Replace tokenizer with func to run extension, but fall back if false\n\n            tokenizer[prop] = function () {\n              for (var _len4 = arguments.length, args = new Array(_len4), _key4 = 0; _key4 < _len4; _key4++) {\n                args[_key4] = arguments[_key4];\n              }\n\n              var ret = pack.tokenizer[prop].apply(tokenizer, args);\n\n              if (ret === false) {\n                ret = prevTokenizer.apply(tokenizer, args);\n              }\n\n              return ret;\n            };\n          };\n\n          for (var prop in pack.tokenizer) {\n            _loop2(prop);\n          }\n\n          opts.tokenizer = tokenizer;\n        })();\n      } // ==-- Parse WalkTokens extensions --== //\n\n\n      if (pack.walkTokens) {\n        var _walkTokens = marked.defaults.walkTokens;\n\n        opts.walkTokens = function (token) {\n          pack.walkTokens.call(this, token);\n\n          if (_walkTokens) {\n            _walkTokens.call(this, token);\n          }\n        };\n      }\n\n      if (hasExtensions) {\n        opts.extensions = extensions;\n      }\n\n      marked.setOptions(opts);\n    });\n  };\n  /**\n   * Run callback for every token\n   */\n\n\n  marked.walkTokens = function (tokens, callback) {\n    var _loop3 = function _loop3() {\n      var token = _step.value;\n      callback.call(marked, token);\n\n      switch (token.type) {\n        case 'table':\n          {\n            for (var _iterator2 = _createForOfIteratorHelperLoose(token.header), _step2; !(_step2 = _iterator2()).done;) {\n              var cell = _step2.value;\n              marked.walkTokens(cell.tokens, callback);\n            }\n\n            for (var _iterator3 = _createForOfIteratorHelperLoose(token.rows), _step3; !(_step3 = _iterator3()).done;) {\n              var row = _step3.value;\n\n              for (var _iterator4 = _createForOfIteratorHelperLoose(row), _step4; !(_step4 = _iterator4()).done;) {\n                var _cell = _step4.value;\n                marked.walkTokens(_cell.tokens, callback);\n              }\n            }\n\n            break;\n          }\n\n        case 'list':\n          {\n            marked.walkTokens(token.items, callback);\n            break;\n          }\n\n        default:\n          {\n            if (marked.defaults.extensions && marked.defaults.extensions.childTokens && marked.defaults.extensions.childTokens[token.type]) {\n              // Walk any extensions\n              marked.defaults.extensions.childTokens[token.type].forEach(function (childTokens) {\n                marked.walkTokens(token[childTokens], callback);\n              });\n            } else if (token.tokens) {\n              marked.walkTokens(token.tokens, callback);\n            }\n          }\n      }\n    };\n\n    for (var _iterator = _createForOfIteratorHelperLoose(tokens), _step; !(_step = _iterator()).done;) {\n      _loop3();\n    }\n  };\n  /**\n   * Parse Inline\n   */\n\n\n  marked.parseInline = function (src, opt) {\n    // throw error in case of non string input\n    if (typeof src === 'undefined' || src === null) {\n      throw new Error('marked.parseInline(): input parameter is undefined or null');\n    }\n\n    if (typeof src !== 'string') {\n      throw new Error('marked.parseInline(): input parameter is of type ' + Object.prototype.toString.call(src) + ', string expected');\n    }\n\n    opt = merge({}, marked.defaults, opt || {});\n    checkSanitizeDeprecation(opt);\n\n    try {\n      var tokens = Lexer.lexInline(src, opt);\n\n      if (opt.walkTokens) {\n        marked.walkTokens(tokens, opt.walkTokens);\n      }\n\n      return Parser.parseInline(tokens, opt);\n    } catch (e) {\n      e.message += '\\nPlease report this to https://github.com/markedjs/marked.';\n\n      if (opt.silent) {\n        return '<p>An error occurred:</p><pre>' + escape(e.message + '', true) + '</pre>';\n      }\n\n      throw e;\n    }\n  };\n  /**\n   * Expose\n   */\n\n\n  marked.Parser = Parser;\n  marked.parser = Parser.parse;\n  marked.Renderer = Renderer;\n  marked.TextRenderer = TextRenderer;\n  marked.Lexer = Lexer;\n  marked.lexer = Lexer.lex;\n  marked.Tokenizer = Tokenizer;\n  marked.Slugger = Slugger;\n  marked.parse = marked;\n  var options = marked.options;\n  var setOptions = marked.setOptions;\n  var use = marked.use;\n  var walkTokens = marked.walkTokens;\n  var parseInline = marked.parseInline;\n  var parse = marked;\n  var parser = Parser.parse;\n  var lexer = Lexer.lex;\n\n  exports.Lexer = Lexer;\n  exports.Parser = Parser;\n  exports.Renderer = Renderer;\n  exports.Slugger = Slugger;\n  exports.TextRenderer = TextRenderer;\n  exports.Tokenizer = Tokenizer;\n  exports.getDefaults = getDefaults;\n  exports.lexer = lexer;\n  exports.marked = marked;\n  exports.options = options;\n  exports.parse = parse;\n  exports.parseInline = parseInline;\n  exports.parser = parser;\n  exports.setOptions = setOptions;\n  exports.use = use;\n  exports.walkTokens = walkTokens;\n\n  Object.defineProperty(exports, '__esModule', { value: true });\n\n}));\n","'use strict';\nvar $ = require('../internals/export');\nvar global = require('../internals/global');\nvar fails = require('../internals/fails');\nvar isArray = require('../internals/is-array');\nvar isObject = require('../internals/is-object');\nvar toObject = require('../internals/to-object');\nvar lengthOfArrayLike = require('../internals/length-of-array-like');\nvar createProperty = require('../internals/create-property');\nvar arraySpeciesCreate = require('../internals/array-species-create');\nvar arrayMethodHasSpeciesSupport = require('../internals/array-method-has-species-support');\nvar wellKnownSymbol = require('../internals/well-known-symbol');\nvar V8_VERSION = require('../internals/engine-v8-version');\n\nvar IS_CONCAT_SPREADABLE = wellKnownSymbol('isConcatSpreadable');\nvar MAX_SAFE_INTEGER = 0x1FFFFFFFFFFFFF;\nvar MAXIMUM_ALLOWED_INDEX_EXCEEDED = 'Maximum allowed index exceeded';\nvar TypeError = global.TypeError;\n\n// We can't use this feature detection in V8 since it causes\n// deoptimization and serious performance degradation\n// https://github.com/zloirock/core-js/issues/679\nvar IS_CONCAT_SPREADABLE_SUPPORT = V8_VERSION >= 51 || !fails(function () {\n  var array = [];\n  array[IS_CONCAT_SPREADABLE] = false;\n  return array.concat()[0] !== array;\n});\n\nvar SPECIES_SUPPORT = arrayMethodHasSpeciesSupport('concat');\n\nvar isConcatSpreadable = function (O) {\n  if (!isObject(O)) return false;\n  var spreadable = O[IS_CONCAT_SPREADABLE];\n  return spreadable !== undefined ? !!spreadable : isArray(O);\n};\n\nvar FORCED = !IS_CONCAT_SPREADABLE_SUPPORT || !SPECIES_SUPPORT;\n\n// `Array.prototype.concat` method\n// https://tc39.es/ecma262/#sec-array.prototype.concat\n// with adding support of @@isConcatSpreadable and @@species\n$({ target: 'Array', proto: true, forced: FORCED }, {\n  // eslint-disable-next-line no-unused-vars -- required for `.length`\n  concat: function concat(arg) {\n    var O = toObject(this);\n    var A = arraySpeciesCreate(O, 0);\n    var n = 0;\n    var i, k, length, len, E;\n    for (i = -1, length = arguments.length; i < length; i++) {\n      E = i === -1 ? O : arguments[i];\n      if (isConcatSpreadable(E)) {\n        len = lengthOfArrayLike(E);\n        if (n + len > MAX_SAFE_INTEGER) throw TypeError(MAXIMUM_ALLOWED_INDEX_EXCEEDED);\n        for (k = 0; k < len; k++, n++) if (k in E) createProperty(A, n, E[k]);\n      } else {\n        if (n >= MAX_SAFE_INTEGER) throw TypeError(MAXIMUM_ALLOWED_INDEX_EXCEEDED);\n        createProperty(A, n++, E);\n      }\n    }\n    A.length = n;\n    return A;\n  }\n});\n"],"sourceRoot":""}